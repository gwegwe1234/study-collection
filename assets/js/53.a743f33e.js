(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{221:function(t,a,s){t.exports=s.p+"assets/img/codeplus1-1.5b58d275.png"},222:function(t,a,s){t.exports=s.p+"assets/img/codeplus1-2.a88cf232.png"},679:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"알고리즘-기초-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#알고리즘-기초-1"}},[t._v("#")]),t._v(" 알고리즘 기초 1")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#알고리즘-시작"}},[t._v("알고리즘 시작")]),n("ul",[n("li",[n("a",{attrs:{href:"#시간-복잡도"}},[t._v("시간 복잡도")])]),n("li",[n("a",{attrs:{href:"#시간-복잡도-계산"}},[t._v("시간 복잡도 계산")])]),n("li",[n("a",{attrs:{href:"#사용한-메모리"}},[t._v("사용한 메모리")])]),n("li",[n("a",{attrs:{href:"#입출력"}},[t._v("입출력")])])])]),n("li",[n("a",{attrs:{href:"#자료구조"}},[t._v("자료구조")]),n("ul",[n("li",[n("a",{attrs:{href:"#스택"}},[t._v("스택")])]),n("li",[n("a",{attrs:{href:"#큐"}},[t._v("큐")])]),n("li",[n("a",{attrs:{href:"#덱-deque"}},[t._v("덱(Deque)")])])])]),n("li",[n("a",{attrs:{href:"#수학-1"}},[t._v("수학 1")]),n("ul",[n("li",[n("a",{attrs:{href:"#나머지-연산"}},[t._v("나머지 연산")])]),n("li",[n("a",{attrs:{href:"#최대-공약수"}},[t._v("최대 공약수")])]),n("li",[n("a",{attrs:{href:"#최소-공배수"}},[t._v("최소 공배수")])]),n("li",[n("a",{attrs:{href:"#소수"}},[t._v("소수")])]),n("li",[n("a",{attrs:{href:"#골드바흐의-추측"}},[t._v("골드바흐의 추측")])]),n("li",[n("a",{attrs:{href:"#팩토리얼"}},[t._v("팩토리얼")])]),n("li",[n("a",{attrs:{href:"#조합-0의-개수"}},[t._v("조합 0의 개수")])])])]),n("li",[n("a",{attrs:{href:"#다이나믹-프로그래밍"}},[t._v("다이나믹 프로그래밍")]),n("ul",[n("li",[n("a",{attrs:{href:"#overlapping-subproble"}},[t._v("Overlapping Subproble")])]),n("li",[n("a",{attrs:{href:"#optimal-substructure"}},[t._v("Optimal Substructure")])]),n("li",[n("a",{attrs:{href:"#overlapping-optimal"}},[t._v("Overlapping + Optimal")])]),n("li",[n("a",{attrs:{href:"#피보나치-수"}},[t._v("피보나치 수")])]),n("li",[n("a",{attrs:{href:"#다이나믹-프로그래밍-구현-방법"}},[t._v("다이나믹 프로그래밍 구현 방법")])])])]),n("li",[n("a",{attrs:{href:"#문제"}},[t._v("문제")]),n("ul",[n("li",[n("a",{attrs:{href:"#_1로-만들기"}},[t._v("1로 만들기")])]),n("li",[n("a",{attrs:{href:"#_2-x-n-타일링"}},[t._v("2 X n 타일링")])]),n("li",[n("a",{attrs:{href:"#_2-x-n-타일링2"}},[t._v("2 X n 타일링2")])]),n("li",[n("a",{attrs:{href:"#_1-2-3-더하기"}},[t._v("1,2,3 더하기")])]),n("li",[n("a",{attrs:{href:"#카드-구매하기"}},[t._v("카드 구매하기")])]),n("li",[n("a",{attrs:{href:"#_1-2-3-더하기-5"}},[t._v("1,2,3 더하기 5")])]),n("li",[n("a",{attrs:{href:"#쉬운-계단-수"}},[t._v("쉬운 계단 수")])]),n("li",[n("a",{attrs:{href:"#이친수"}},[t._v("이친수")])]),n("li",[n("a",{attrs:{href:"#가장-긴-증가하는-부분-수열"}},[t._v("가장 긴 증가하는 부분 수열")])]),n("li",[n("a",{attrs:{href:"#연속합"}},[t._v("연속합")])]),n("li",[n("a",{attrs:{href:"#제곱수의-합"}},[t._v("제곱수의 합")])]),n("li",[n("a",{attrs:{href:"#합분해"}},[t._v("합분해")])]),n("li",[n("a",{attrs:{href:"#_1-2-3-더하기-3"}},[t._v("1,2,3 더하기 3")])]),n("li",[n("a",{attrs:{href:"#rgb-거리"}},[t._v("RGB 거리")])]),n("li",[n("a",{attrs:{href:"#동물원"}},[t._v("동물원")])]),n("li",[n("a",{attrs:{href:"#오르막-수"}},[t._v("오르막 수")])]),n("li",[n("a",{attrs:{href:"#스티커"}},[t._v("스티커")])]),n("li",[n("a",{attrs:{href:"#정수-삼각현"}},[t._v("정수 삼각현")])]),n("li",[n("a",{attrs:{href:"#연속합-2"}},[t._v("연속합 2")])]),n("li",[n("a",{attrs:{href:"#타일-채우기"}},[t._v("타일 채우기")])]),n("li",[n("a",{attrs:{href:"#동물원"}},[t._v("동물원")])]),n("li",[n("a",{attrs:{href:"#rgb-거리-2"}},[t._v("RGB 거리 2")])])])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"알고리즘-시작"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#알고리즘-시작"}},[t._v("#")]),t._v(" 알고리즘 시작")]),t._v(" "),n("h3",{attrs:{id:"시간-복잡도"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#시간-복잡도"}},[t._v("#")]),t._v(" 시간 복잡도")]),t._v(" "),n("ul",[n("li",[t._v("Big O - 가장 오래걸리는 케이스에 대한 계산")]),t._v(" "),n("li",[t._v("시간 복잡도는 소스를 보고 계산할 수도 있고, 소스를 작성하기 전에 먼저 계산해 볼 수 있다.")]),t._v(" "),n("li",[t._v("실제 돌리는거보다 계산한 시간복잡도가 적은 경우에만 코드를 작성한다")]),t._v(" "),n("li",[t._v("시간 = 대충 5억에 1초라고 보면 된다")]),t._v(" "),n("li",[t._v("시간 복잡도에 대한건 단순 알고리즘 풀때만이 아니라, 웹사이트 만들거나 이런 경우에도 당연히 고려해야 할 부분.")])]),t._v(" "),n("h3",{attrs:{id:"시간-복잡도-계산"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#시간-복잡도-계산"}},[t._v("#")]),t._v(" 시간 복잡도 계산")]),t._v(" "),n("ul",[n("li",[t._v("Big O Notation에서 상수는 버린다.")]),t._v(" "),n("li",[t._v("두 가지 항이 있을 때, 변수가 같으면 큰 것만 빼고 다 버림")]),t._v(" "),n("li",[t._v("변수가 다른 두 항은 걍 냅둔다.")])]),t._v(" "),n("h3",{attrs:{id:"사용한-메모리"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#사용한-메모리"}},[t._v("#")]),t._v(" 사용한 메모리")]),t._v(" "),n("ul",[n("li",[t._v("보통 많은 공간을 사용하는건 배열")]),t._v(" "),n("li",[t._v("배열이 사용한 공간: 배열의 크기 X 자료형의 크기")]),t._v(" "),n("li",[t._v("보통 1억에 380메가 (대략)")]),t._v(" "),n("li",[t._v("문제에선 공간은 크게 신경 안써도 되지만, 메모리 제한이 있는 문제는 고려가 필요")]),t._v(" "),n("li",[t._v("불필요한 공간이 없다면, 대부분 메모리 제한은 알아서 지켜진다.")])]),t._v(" "),n("h3",{attrs:{id:"입출력"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#입출력"}},[t._v("#")]),t._v(" 입출력")]),t._v(" "),n("ul",[n("li",[t._v("Java : Scanner, System.out")]),t._v(" "),n("li",[t._v("입력이 많으면 BufferedReader 사용")]),t._v(" "),n("li",[t._v("출력이 많을 경우 BufferedWriter 사용")]),t._v(" "),n("li",[t._v("또는 출력이 많은 경우 StringBuilder로 한 문자열로 만들어 출력을 한 번만")])]),t._v(" "),n("h2",{attrs:{id:"자료구조"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#자료구조"}},[t._v("#")]),t._v(" 자료구조")]),t._v(" "),n("h3",{attrs:{id:"스택"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#스택"}},[t._v("#")]),t._v(" 스택")]),t._v(" "),n("ul",[n("li",[t._v("한쪽 끝에서만 자료를 넣고 뺄 수 있는 자료구조")]),t._v(" "),n("li",[t._v("넣는거 push, 빼는건 pop")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/gwegwe1234/AlgorithmStudy/blob/master/CodePlusAlgo/src/StackMain.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h4",{attrs:{id:"스택의-구현"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#스택의-구현"}},[t._v("#")]),t._v(" 스택의 구현")]),t._v(" "),n("ul",[n("li",[t._v("일차원 배열 하나로 구현할 수 있다.")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" stack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),n("ul",[n("li",[t._v("Stack = Last in First Out")])]),t._v(" "),n("h4",{attrs:{id:"단어-뒤집기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#단어-뒤집기"}},[t._v("#")]),t._v(" 단어 뒤집기")]),t._v(" "),n("ul",[n("li",[t._v("문장의 단어를 모두 뒤집는 문제")]),t._v(" "),n("li",[t._v("Stack을 써줄 경우 제일 좋다")]),t._v(" "),n("li",[t._v("BigO = O(N) - 하나의 통 문자 일 때, 스택에 죄다 넣는 시간인 N이 걸린다.")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/gwegwe1234/AlgorithmStudy/blob/master/CodePlusAlgo/src/WordReverseMain.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h4",{attrs:{id:"괄호"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#괄호"}},[t._v("#")]),t._v(" 괄호")]),t._v(" "),n("ul",[n("li",[t._v("() / (()) / (())() 이런게 올바른거")]),t._v(" "),n("li",[t._v("모든 괄호를 다찾으면 O(N*N)")]),t._v(" "),n("li",[t._v("스택을 이용하면 좋다.")]),t._v(" "),n("li",[t._v("스택에는 여는 괄호만 넣는다. (정답의 후보를 담음)")]),t._v(" "),n("li",[t._v("( 가 나오면 스택에 넣고, ) 가 나오면 스택에서 하나 빼서 ( 인지 확인한다.")]),t._v(" "),n("li",[t._v("또는 하나를 뺄 수 있는지 확인한다.")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/gwegwe1234/AlgorithmStudy/blob/master/CodePlusAlgo/src/ParenthesisMain.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h4",{attrs:{id:"스택-수열"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#스택-수열"}},[t._v("#")]),t._v(" 스택 수열")]),t._v(" "),n("ul",[n("li",[t._v("1~N 까지의 수를 오름차순으로 넣고 빼면서 하나의 수열을 만들 수 있는가?")]),t._v(" "),n("li",[t._v("임의의 수열 A가 있을 때 스택을 이용해 이 수열을 만들수 있는지 확인")]),t._v(" "),n("li",[t._v("예를 들어 4,3,6,8,7,5,2,1 이면, ++++--++-++-----로 가능")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/gwegwe1234/AlgorithmStudy/blob/master/CodePlusAlgo/src/StackListMain.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"큐"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#큐"}},[t._v("#")]),t._v(" 큐")]),t._v(" "),n("ul",[n("li",[t._v("First In First Out")]),t._v(" "),n("li",[t._v("한쪽 끝에서만 자료를넣고 다른 한쪽 끝에서만 뺄 수 있는 자료구조")]),t._v(" "),n("li",[n("code",[t._v("BFS")]),t._v("에서 많이 쓰임")]),t._v(" "),n("li",[t._v("1차원 배열로 구현 가능")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" queue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("end"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" end"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" end"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"조세퍼스-문제"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#조세퍼스-문제"}},[t._v("#")]),t._v(" 조세퍼스 문제")]),t._v(" "),n("ul",[n("li",[t._v("1번부터 N번까지 N명의 사람이 원을 이루면서 앉아 있고, 양의 정수 M이 주어진다.")]),t._v(" "),n("li",[t._v("순서대로 M번째 사람을 제거한다.")]),t._v(" "),n("li",[t._v("남은 사람들중에 M번째 또 제거")]),t._v(" "),n("li",[t._v("모두 제거 될 때 까지")]),t._v(" "),n("li",[t._v("제거되는 순서를 조세퍼스 순열이라고 한다.")])]),t._v(" "),n("h3",{attrs:{id:"덱-deque"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#덱-deque"}},[t._v("#")]),t._v(" 덱(Deque)")]),t._v(" "),n("ul",[n("li",[t._v("양 끝에서만 자료를 넣고 뺄 수 있는 자료구조")]),t._v(" "),n("li",[t._v("Double-ended queue의 약자")]),t._v(" "),n("li",[t._v("큐도 되고 스택도 되고..")]),t._v(" "),n("li",[t._v("BFS에서 볼 수 있다")])]),t._v(" "),n("h2",{attrs:{id:"수학-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#수학-1"}},[t._v("#")]),t._v(" 수학 1")]),t._v(" "),n("h3",{attrs:{id:"나머지-연산"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#나머지-연산"}},[t._v("#")]),t._v(" 나머지 연산")]),t._v(" "),n("ul",[n("li",[t._v("modular arithmetic")]),t._v(" "),n("li",[t._v("컴퓨터의 정수는 저장할 수 있는 범위가 저장되어 있기 때문에, 답을 M으로 나눈 나머지를 출력하라는 문제가 많다.")]),t._v(" "),n("li",[t._v("(A+B) mod M = ((A mod M) + (B mod M)) mod M => 곱셈, 뺄셈도 적용됨")]),t._v(" "),n("li",[t._v("뺄셈은 (A % M - B % M + M) % M")])]),t._v(" "),n("h3",{attrs:{id:"최대-공약수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#최대-공약수"}},[t._v("#")]),t._v(" 최대 공약수")]),t._v(" "),n("ul",[n("li",[t._v("GCD")]),t._v(" "),n("li",[t._v("공통된 약수중 가장 큰 정수")]),t._v(" "),n("li",[t._v("제일 쉬운 방버븐 2부터 min(A,B) 까지 계속 나눠본다")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" g "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        g "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("더 좋은 방법은 유클리드 호제법")]),t._v(" "),n("li",[t._v("r = a%b")]),t._v(" "),n("li",[t._v("GCD(a,b) = GCD(b,r)")]),t._v(" "),n("li",[t._v("재귀로 짜면 된다.")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("gcd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("gcd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("재귀가 아닌 경우")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("gcd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"최소-공배수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#최소-공배수"}},[t._v("#")]),t._v(" 최소 공배수")]),t._v(" "),n("ul",[n("li",[t._v("LCM")]),t._v(" "),n("li",[t._v("A X B = GCD X LCM")]),t._v(" "),n("li",[t._v("LCM = A X B / GCD")])]),t._v(" "),n("h3",{attrs:{id:"소수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#소수"}},[t._v("#")]),t._v(" 소수")]),t._v(" "),n("ul",[n("li",[t._v("소수 : 약수가 1과 자기 자신 밖에 없는 수")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 어떤 수 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("N")]),t._v("이 소수인지 아닌지 판별하는 방법\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("N")]),t._v("보다 작거나 같은 모든 자연수 중에서 소수를 찾아내는 방법\n")])])]),n("h4",{attrs:{id:"_1번-구현"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1번-구현"}},[t._v("#")]),t._v(" 1번 구현")]),t._v(" "),n("ul",[n("li",[t._v("그냥 다 찾는다.")]),t._v(" "),n("li",[t._v("O(N)")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("다른 좋은 방법은 N이 소수가 되려면, 2보다 크거나 같고, N/2보다 작거나 같은 자연수로 나누어 떨어지면 안된다.")]),t._v(" "),n("li",[t._v("O(N/2)")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("제일 좋은 경우엔 N이 소수가 되려면, 2보다 크거나 같고, 루트 N보다 작거나 같은 자연수로 나누어 떨어지면 안된다.")]),t._v(" "),n("li",[t._v("O(root N)")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"_2번-구현"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2번-구현"}},[t._v("#")]),t._v(" 2번 구현")]),t._v(" "),n("ul",[n("li",[t._v("NrootN 이라 시간이 오래걸린다.")]),t._v(" "),n("li",[n("code",[t._v("에라토스테네스의 체")]),t._v("를 사용")]),t._v(" "),n("li",[t._v("지워지지 않은 수중에서 가장 작은 수는 2")]),t._v(" "),n("li",[t._v("2는 소수이고 2의 배수는 모두 지운다.")]),t._v(" "),n("li",[t._v("지워지지 않은 수 중 가장 작은 수인 3의 배수를 모두 지운다.")]),t._v(" "),n("li",[t._v("그다음 5의배수 ...")]),t._v(" "),n("li",[t._v("이렇게 다 구하고 남은 것들이 소수이다.")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" prime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 소수 저장")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 소수의 개수")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" check"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 지워졌으면 true;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100까지 소수")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("check"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 지워지지 않았으면")]),t._v("\n        prime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            check"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"골드바흐의-추측"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#골드바흐의-추측"}},[t._v("#")]),t._v(" 골드바흐의 추측")]),t._v(" "),n("ul",[n("li",[t._v("2보다 큰 모든 짝수는 두 소수의 합으로 표현 가능하다.")]),t._v(" "),n("li",[t._v("위의 문장에 3을 더하면")]),t._v(" "),n("li",[t._v("5보다 큰 모든 홀수는 세 소수의 합으로 표현 가능하다. 로 바뀐다.")]),t._v(" "),n("li",[t._v("증명 안됨")]),t._v(" "),n("li",[t._v("10의 18승까진 증명이 됨")]),t._v(" "),n("li",[t._v("백만 이하의 짝수에 대해 골드 바흐의 추측을 검증하는 문제")]),t._v(" "),n("li",[t._v("N = a + b;")]),t._v(" "),n("li",[t._v("check[N-b] == false")])]),t._v(" "),n("h3",{attrs:{id:"팩토리얼"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#팩토리얼"}},[t._v("#")]),t._v(" 팩토리얼")]),t._v(" "),n("ul",[n("li",[t._v("N!은 매우크다")]),t._v(" "),n("li",[t._v("팩토리얼 0의 개수 구하는 문제")]),t._v(" "),n("li",[t._v("그냥 다 곱해서 구하려고 하면 너무 오래걸리거나, 정수형 크기보다 커서 구하기 어렵다")]),t._v(" "),n("li",[t._v("10! = 36288"),n("code",[t._v("00")]),t._v(" => 0이 2개")]),t._v(" "),n("li",[t._v("10!이 0이 2개인 이유는 10!을 소인수분해 해서 2와 5의배수 개수를 구하면 된다.")]),t._v(" "),n("li",[t._v("근데 2보다 5가 더 적으니까 5의 개수만 구하면 된다.")]),t._v(" "),n("li",[t._v("N! 0의 개수 = [N/5] + [N/5"),n("em",[t._v("5] + [N/5")]),t._v("5*5]...")])]),t._v(" "),n("h3",{attrs:{id:"조합-0의-개수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#조합-0의-개수"}},[t._v("#")]),t._v(" 조합 0의 개수")]),t._v(" "),n("ul",[n("li",[t._v("nCm")]),t._v(" "),n("li",[t._v("n! / (n-m)! * m!")]),t._v(" "),n("li",[t._v("이건 2, 5 둘다 구해서 둘 중 작은거로 해야된다.")])]),t._v(" "),n("h2",{attrs:{id:"다이나믹-프로그래밍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#다이나믹-프로그래밍"}},[t._v("#")]),t._v(" 다이나믹 프로그래밍")]),t._v(" "),n("ul",[n("li",[t._v("큰 문제를 작은 문제로 나눠서 푸는 알고리즘 (문제의 크기)")]),t._v(" "),n("li",[t._v("Dynamic은 간지나보인다고 붙인거고 아무런 의미가 없다..(?)")]),t._v(" "),n("li",[t._v("두 가지 속성을 만족해야 다이나믹 프로그래밍 문제 풀이가 가능하다.")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Overlapping")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Subproblem")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 겹치는 부분 문제\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Optimal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Substructure")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 최적 부분 구조\n")])])]),n("h3",{attrs:{id:"overlapping-subproble"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overlapping-subproble"}},[t._v("#")]),t._v(" Overlapping Subproble")]),t._v(" "),n("ul",[n("li",[t._v("피보나치 수")]),t._v(" "),n("li",[t._v("F0 = 0")]),t._v(" "),n("li",[t._v("F1 = 1")]),t._v(" "),n("li",[t._v("Fn = Fn-1 + Fn-2(n>=2)")]),t._v(" "),n("li",[t._v("n번째가 큰 문제, n-1, n-2 는 작은 문제")]),t._v(" "),n("li",[t._v("큰 문제와 작은 문제는 같은 방법으로 풀 수 있다.")]),t._v(" "),n("li",[t._v("문제를 작은 문제로 쪼갤 수 있다.")]),t._v(" "),n("li",[t._v("보통 재귀로 푼다")])]),t._v(" "),n("h3",{attrs:{id:"optimal-substructure"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#optimal-substructure"}},[t._v("#")]),t._v(" Optimal Substructure")]),t._v(" "),n("ul",[n("li",[t._v("문제의 정답을 작은 문제의 정답에서 구할 수 있다.")]),t._v(" "),n("li",[t._v("예시")]),t._v(" "),n("li",[t._v("서울에서 부산을 가는 가장 빠른 길이 대전과 대구를 순서대로 거쳐야 한다면,")]),t._v(" "),n("li",[t._v("대전에서 부산을 가는 가장 빠른 길은 대구를 거쳐야 한다.")]),t._v(" "),n("li",[t._v("뭐 이런식..")]),t._v(" "),n("li",[t._v("Optimal Substructure를 만족한다면, 문제의 크기에 상관 없이 어떤 한 문제의 정답은 일정하다.")]),t._v(" "),n("li",[t._v("10번째 피보나치 수를 구하면서 구한 4번째 피보나치 수 == 9번째 피보나치 수를 구하면서 구한 4번째 피보나치 수 == 8번째 ...")]),t._v(" "),n("li",[t._v("4 번째 피보나치 수는 항상 같다.")])]),t._v(" "),n("h3",{attrs:{id:"overlapping-optimal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overlapping-optimal"}},[t._v("#")]),t._v(" Overlapping + Optimal")]),t._v(" "),n("ul",[n("li",[t._v("매번 같은 답이 나오는걸 계속 쓰면 비 효율적이다.")]),t._v(" "),n("li",[t._v("Optimal Structure를 만족하기 때문에, 같은 문제를 구할 때마다 정답이 같다.")]),t._v(" "),n("li",[t._v("따라서 정답을 이미 구했으면, 정답을 어딘가에 메모 (memorization) 한다.")])]),t._v(" "),n("h3",{attrs:{id:"피보나치-수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#피보나치-수"}},[t._v("#")]),t._v(" 피보나치 수")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fibonacci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fibonacci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fibonacci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("위의 코드는 아래와 같이 호출된다.")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(221),alt:"alt"}})]),t._v(" "),n("ul",[n("li",[t._v("중복 호출이 매우 많다.")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(222),alt:"alt"}})]),t._v(" "),n("ul",[n("li",[t._v("이런건 한번만 구하도록 해보자")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" memo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fibonacci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("memo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" memo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 이미 해당 값이 있다는 거니까, 그냥 저장된 값 리턴해준다.")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       memo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fibonacci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fibonacci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" memo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("기존 피보나치는 하나가 2번씩 푸니가 O(2의 n)")]),t._v(" "),n("li",[t._v("DnymicProgramming 은 문제를 한번씩만 푸니까 문제의 개수 X 무제 1개를 푸는 시간 ==> O(N)")])]),t._v(" "),n("h3",{attrs:{id:"다이나믹-프로그래밍-구현-방법"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#다이나믹-프로그래밍-구현-방법"}},[t._v("#")]),t._v(" 다이나믹 프로그래밍 구현 방법")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Top")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("down  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 재귀\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bottom")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("up "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 반복\n")])])]),n("ul",[n("li",[t._v("두 방법의 시간 복잡도 비교는 알수가 없다. (매번 다르다고 보면 된다)")]),t._v(" "),n("li",[t._v("크게 고민할 필요는 없다")])]),t._v(" "),n("h4",{attrs:{id:"bottom-up"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bottom-up"}},[t._v("#")]),t._v(" Bottom-up")]),t._v(" "),n("ul",[n("li",[t._v("문제를 크기가 작은 문제부터 차례대로 푼다")]),t._v(" "),n("li",[t._v("문제의 크기를 조금씩 크게 만들면서 문제를 점점 푼다")]),t._v(" "),n("li",[t._v("작은 문제를 풀면서 왔기 때문에, 큰 문제는 항상 풀 수 있다.")]),t._v(" "),n("li",[t._v("반복하다 보면 가장 큰 문제를 풀 수 있다")]),t._v(" "),n("li",[t._v("보통 반복문으로 구현")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fibonnaci")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"문제"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#문제"}},[t._v("#")]),t._v(" 문제")]),t._v(" "),n("h3",{attrs:{id:"_1로-만들기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1로-만들기"}},[t._v("#")]),t._v(" 1로 만들기")]),t._v(" "),n("ul",[n("li",[t._v("D[i] = i를 1로 만드는데 필요한 최소 연산 횟수")]),t._v(" "),n("li",[t._v("i에게 가능한 경우")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" i가 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("으로 나누어 떨어졌을 때"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("으로 나누는 경우\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" i가 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("로 나누어 떨어졌을 때"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("로 나누는 경우\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" i에서 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("을 빼는 경우\n")])])]),n("ul",[n("li",[n("code",[t._v("D[N] = min(D[N/3], D[N/2], D[N-1]) + 1;")])]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/MakeOneTopDown.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("탑다운 구현 소스"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/MakeOneBottomUp.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("바텀업 구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_2-x-n-타일링"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-x-n-타일링"}},[t._v("#")]),t._v(" 2 X n 타일링")]),t._v(" "),n("ul",[n("li",[t._v("점화식 : D[n] = 2 X n 을 채우는 방법의 수")]),t._v(" "),n("li",[t._v("2 X n 직사각형이 있을 때, 가장 오른쪽에 타일을 놓을 수 있는 방법은 총 2가지")]),t._v(" "),n("li",[t._v("경우의 수 : D[n-1] / D[n-2]")]),t._v(" "),n("li",[t._v("즉 2 X n을 구할 수 있는 방법은 2개다")]),t._v(" "),n("li",[n("code",[t._v("D[n] = D[n-1] + D[n-2]")])]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/TwoMultipleNTiling.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_2-x-n-타일링2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-x-n-타일링2"}},[t._v("#")]),t._v(" 2 X n 타일링2")]),t._v(" "),n("ul",[n("li",[t._v("2 X 2 정사각형 케이스도 추가")]),t._v(" "),n("li",[n("code",[t._v("D[n] = D[n-1] + D[n-2] + D[n-2]")])]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/TwoMultipleNTiling2.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_1-2-3-더하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-더하기"}},[t._v("#")]),t._v(" 1,2,3 더하기")]),t._v(" "),n("ul",[n("li",[t._v("정수 n을 1,2,3의 합으로 나타내는 방법의 수를 구하는 문제")]),t._v(" "),n("li",[t._v("점화식 : D[n] = n을 1,2,3의 합으로 나타내는 방법의 수")]),t._v(" "),n("li",[t._v("o + o + o + o ... + o = n")]),t._v(" "),n("li",[t._v("케이스는 맨 마지막에 1,2,3이 더해지는 케이스가 있다.")]),t._v(" "),n("li",[t._v("그 전엔 n-1, n-2, n-3 까지의 합이 된다.")]),t._v(" "),n("li",[t._v("D[0] = 1")]),t._v(" "),n("li",[n("code",[t._v("D[n] = D[n-1] + D[n-2] + D[n-3]")])]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/OneTwoThreePlus.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"카드-구매하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#카드-구매하기"}},[t._v("#")]),t._v(" 카드 구매하기")]),t._v(" "),n("ul",[n("li",[t._v("카드 N개를 구매해야 한다.")]),t._v(" "),n("li",[t._v("카드팩은 총 N가지 종류가 존재한다.")]),t._v(" "),n("li",[t._v("i번째 카드팩은 i개의 카드를 담고 있고, 가격은 P[i]원 이다.")]),t._v(" "),n("li",[t._v("카드 N개를 구매하는 비용의 최대값을 구하는 문제")]),t._v(" "),n("li",[t._v("1 <= i <= n")]),t._v(" "),n("li",[n("code",[t._v("D[n] = max(D[n-i] + P[i])")])]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/BuyingCard.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_1-2-3-더하기-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-더하기-5"}},[t._v("#")]),t._v(" 1,2,3 더하기 5")]),t._v(" "),n("ul",[n("li",[t._v("정수 n을 1,2,3의 합으로 나타내는 방법의 수를 구하는 문제")]),t._v(" "),n("li",[t._v("근데 같은수를 연속으로 두 번 이상 사용하면 안된다.")]),t._v(" "),n("li",[t._v("D[i][j] = u를 1,2,3의 합으로 나타내는 방법의 수, 마지막에 사용한 수는 j")]),t._v(" "),n("li",[t._v("D[i][1] = D[i-1][2] + D[i-1][3] / D[i][2] = D[i-2][1] + D[i-2][3] / D[i][3] = D[i-3][1] + D[i-3][2]")]),t._v(" "),n("li",[t._v("초기화의 예외가 필요하다.")])]),t._v(" "),n("h3",{attrs:{id:"쉬운-계단-수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#쉬운-계단-수"}},[t._v("#")]),t._v(" 쉬운 계단 수")]),t._v(" "),n("ul",[n("li",[t._v("인접한 자리의 차이가 1이 나는 수를 계단 수라고 한다.")]),t._v(" "),n("li",[t._v("예 : 45656")]),t._v(" "),n("li",[t._v("길이가 N인 계단 수의 개수를 구하는 문제")]),t._v(" "),n("li",[t._v("D[N][L] = 길이가 N인 계단수, 마지막 수 L")]),t._v(" "),n("li",[t._v("D[N][L] = D[N-1][L-1] + D[N-1][L+1]")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/EasyStairNumber.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"이친수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#이친수"}},[t._v("#")]),t._v(" 이친수")]),t._v(" "),n("ul",[n("li",[t._v("이진수 베이스")]),t._v(" "),n("li",[t._v("이친수는 0으로 시작하지 않는다.")]),t._v(" "),n("li",[t._v("1이 연속으로 나타나지 않는다.")]),t._v(" "),n("li",[t._v("N자리 이친수의 개수를 구하는 문제")]),t._v(" "),n("li",[t._v("D[N][L] = N자리 이친수, 마지막 수 L")]),t._v(" "),n("li",[t._v("D[N][0] = D[N-1][0] + D[N-1][1]")]),t._v(" "),n("li",[t._v("D[N][1] = D[N-1][0]")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/TwoCrazyNumber.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"가장-긴-증가하는-부분-수열"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#가장-긴-증가하는-부분-수열"}},[t._v("#")]),t._v(" 가장 긴 증가하는 부분 수열")]),t._v(" "),n("ul",[n("li",[t._v("수열 A가 주어졌을 때, 가장 긴 증가하는 부분 수열을 구하는 문제")]),t._v(" "),n("li",[t._v("예시 : 10, 20, 10, 30, 20, 50 이면 10,20,30,50 이 답")]),t._v(" "),n("li",[n("code",[t._v("D[i] = max(D[j]) + 1 / j < i, A[j] < A[i]")])]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/LIS.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"연속합"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#연속합"}},[t._v("#")]),t._v(" 연속합")]),t._v(" "),n("ul",[n("li",[t._v("n개의 정수로 이루어진 임의의 수열이 주어짐")]),t._v(" "),n("li",[t._v("이 중 연속된 몇 개의 숫자를 선택해서 구할 수 있는 합 중 가장 큰 합을 구한다.")]),t._v(" "),n("li",[t._v("숫자는 한 개 이상 선택")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/SequentialSum.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"제곱수의-합"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#제곱수의-합"}},[t._v("#")]),t._v(" 제곱수의 합")]),t._v(" "),n("ul",[n("li",[t._v("주어진 자연수 N을 제곱수들의 합으로 표현할 때에 그 항의 최소 개수를 구하는 문제")]),t._v(" "),n("li",[t._v("11 = 3"),n("em",[t._v("3 + 1")]),t._v("1 + 1*1")]),t._v(" "),n("li",[t._v("마지막에 와야될 수는 i의 제곱")]),t._v(" "),n("li",[t._v("그 전까지의 합은 N - i제곱")]),t._v(" "),n("li",[t._v("D[n] = min(D[n - i제곱]) + 1;")]),t._v(" "),n("li",[t._v("1 제곱 <= i 제곱 <= N")]),t._v(" "),n("li",[t._v("i <= 루트 N")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/DoubleMultipleSum.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"합분해"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#합분해"}},[t._v("#")]),t._v(" 합분해")]),t._v(" "),n("ul",[n("li",[t._v("0부터 N까지의 정수 K개를 더해서 그 합이 N이 되는 경우의 수")]),t._v(" "),n("li",[t._v("마지막에 더한 수가 L로 정의 한다.")]),t._v(" "),n("li",[t._v("D[K][N] = 시그마 D[K-1][N-L];")])]),t._v(" "),n("h3",{attrs:{id:"_1-2-3-더하기-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-더하기-3"}},[t._v("#")]),t._v(" 1,2,3 더하기 3")]),t._v(" "),n("ul",[n("li",[t._v("정수 n을 1,2,3의 합으로 나타내는 방법의 수를 구하는 문제")])]),t._v(" "),n("h3",{attrs:{id:"rgb-거리"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rgb-거리"}},[t._v("#")]),t._v(" RGB 거리")]),t._v(" "),n("ul",[n("li",[t._v("RGB 거리에 사는 사람들은 집을 빨강, 초록 파랑중에 하나로 칠한다.")]),t._v(" "),n("li",[t._v("이웃과 같은색으로 칠할 수 없다.")]),t._v(" "),n("li",[t._v("집 i의 이웃의 집 i-1, i+1이고, 첫 집과 마지막 집은 이웃이 아님")]),t._v(" "),n("li",[t._v("각집을 빨강으로 칠하는 비용, 초록으로 칠할 때 드는 비용, 파랑으로 드는 비용이 주어질 때, 모든 집을 칠하는 비용의 최솟값")]),t._v(" "),n("li",[t._v("D[i][j] = i번 집을 색 j로 칠했을 때, 1~i번 집을 칠하는 비용의 최솟값\n"),n("ul",[n("li",[t._v("j = 0 -> 빨강")]),t._v(" "),n("li",[t._v("j = 1 -> 초록")]),t._v(" "),n("li",[t._v("j = 2 -> 파랑")])])]),t._v(" "),n("li",[t._v("D[i][0] = min(D[i-1][1], D[i-1][2]) + A[i][0]")]),t._v(" "),n("li",[t._v("D[i][1] = min(D[i-1][0], D[i-1][2]) + A[i][1]")]),t._v(" "),n("li",[t._v("D[i][2] = min(D[i-1][0], D[i-1][1]) + A[i][2]")]),t._v(" "),n("li",[t._v("A[i][j] = 문제의 입력")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/RGBStreet.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"동물원"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#동물원"}},[t._v("#")]),t._v(" 동물원")]),t._v(" "),n("ul",[n("li",[t._v("가로로 두 칸, 세로로 N 칸인 동물원이 있다.")]),t._v(" "),n("li",[t._v("가로, 세로로 붙어 있게 배치하면 안된다.")]),t._v(" "),n("li",[t._v("가능한 배치의 수")]),t._v(" "),n("li",[t._v("가로의 경우의 수 = 한마리도 안넣기, 오른쪽에 넣기, 왼쪽에 넣기, 이 세 가지만 된다.")]),t._v(" "),n("li",[t._v("D[N][0] = N번 줄에 배치하지 않음")]),t._v(" "),n("li",[t._v("D[N][1] = N번 줄에 왼쪽에만 배치함")]),t._v(" "),n("li",[t._v("D[N][2] = N번 줄에 오른쪽에만 배치함")]),t._v(" "),n("li",[t._v("D[N][0] = D[N-1][0] + D[N-1][1] + D[N-1][2]")]),t._v(" "),n("li",[t._v("D[N][1] = D[N-1][0] + D[N-1][2]")]),t._v(" "),n("li",[t._v("D[N][2] = D[N-1][0] + D[N-1][1]")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/Zoo.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"오르막-수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#오르막-수"}},[t._v("#")]),t._v(" 오르막 수")]),t._v(" "),n("ul",[n("li",[t._v("오르막 수는 수의 자리가 오름차순을 이루는 수")]),t._v(" "),n("li",[t._v("인접한 수가 같아도 오름차순으로 친다")]),t._v(" "),n("li",[t._v("수의 길이 N이 주어졌을 때 오르막수의 개수를 구하는 문제")]),t._v(" "),n("li",[t._v("수는 0부터 시작 가능")]),t._v(" "),n("li",[t._v("예: 1233345, 5666789...")]),t._v(" "),n("li",[t._v("D[i][j] = 길이가 i이고 마지막 숫자가 j인 오르막 수의 개수")]),t._v(" "),n("li",[t._v("D[1][i] = 1")]),t._v(" "),n("li",[t._v("D[i][j] = D[i-1][k] (k <= j)")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/UpUpUpNumbers.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"스티커"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#스티커"}},[t._v("#")]),t._v(" 스티커")]),t._v(" "),n("ul",[n("li",[t._v("이거 동물원이랑 거의 똑같음")]),t._v(" "),n("li",[t._v("동물원에 넣듯이 0,1,2 이렇게 해서 점수 높은거로 뽑아내면됨")])]),t._v(" "),n("h3",{attrs:{id:"정수-삼각현"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#정수-삼각현"}},[t._v("#")]),t._v(" 정수 삼각현")]),t._v(" "),n("ul",[n("li",[t._v("정수 삼각형이 있을 때, 왼쪽 오른쪽 선택해서 제일 크게 합해지는 경우")]),t._v(" "),n("li",[t._v("(i, j) i행 ,j열 = i 행의 j번째 수")]),t._v(" "),n("li",[t._v("D[i][j] = i행 j열이 선택되었을 때 최대합")]),t._v(" "),n("li",[t._v("(i, j)가 선택되기 전에 선택된 수는 (i-1)(j), (i-1)(j-1) 둘 중 하나이다.")]),t._v(" "),n("li",[t._v("D[i][j] = Max(D[i-1][j], D[i-1][j-1]) + A[i][j];")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/IntegerTriangle.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"연속합-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#연속합-2"}},[t._v("#")]),t._v(" 연속합 2")]),t._v(" "),n("ul",[n("li",[t._v("수열의 연속합 중 가장 큰 합을 구하는 문제")]),t._v(" "),n("li",[t._v("수는 하나 제거할 수 있고, 제거하지 않을 수도 있다.")]),t._v(" "),n("li",[t._v("D[i] = i 번째 수에서 끝나는 최대 연속합")]),t._v(" "),n("li",[t._v("D2[i] = i 번째 수에서 시작하는 최대 연속합")]),t._v(" "),n("li",[t._v("이 값을 이용해서 A[i] 를 제거했을 대 최대 연속합을 구할 수 있다.")]),t._v(" "),n("li",[t._v("i 번째 수를 제거하면 i-1번째 수와, i+1 번째 수가 연속하게 된다.")]),t._v(" "),n("li",[t._v("따라서 D[i-1] + D2[i+1]이 i번째 수를 제거 했을 때 i번째 수가 포함되는 최대 연속합")])]),t._v(" "),n("h3",{attrs:{id:"타일-채우기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#타일-채우기"}},[t._v("#")]),t._v(" 타일 채우기")]),t._v(" "),n("ul",[n("li",[t._v("3 X N을 1 X 2, 2 X 1 로 채우는 방법의 수")]),t._v(" "),n("li",[t._v("D[i] = 3 X i를 채우는 방법의 수")]),t._v(" "),n("li",[t._v("하나씩 다찾기엔 경우의 수가 많아서.. 그냥 그렇다")])]),t._v(" "),n("h3",{attrs:{id:"동물원-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#동물원-2"}},[t._v("#")]),t._v(" 동물원")]),t._v(" "),n("ul",[n("li",[t._v("D[i] = 세로 크기가 i인 동물원을 채우는 방법의 수, 단 i 번째 줄에는 동물이 있어야 한다.")]),t._v(" "),n("li",[t._v("i번째 줄 이전에 동물이 있는 줄은 어디일까?")]),t._v(" "),n("li",[t._v("D[i] = D[i-1] + 2(D[i-2] + D[i-3] ... D[1]) -> N제곱으로 시간이 터짐")])]),t._v(" "),n("h3",{attrs:{id:"rgb-거리-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rgb-거리-2"}},[t._v("#")]),t._v(" RGB 거리 2")]),t._v(" "),n("ul",[n("li",[t._v("첫 집과 마지막 집도 이웃이다 (원형 마을)")]),t._v(" "),n("li",[t._v("1과 N에 대한 조건처리가 필요하다")]),t._v(" "),n("li",[t._v("1번집을 색을 고정한다.")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mbiostudy/codeplus-algorithm/blob/main/gwangtae/gwegwe-algorithm/src/RGBStreet2.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("구현 소스"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);