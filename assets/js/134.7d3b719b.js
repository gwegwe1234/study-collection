(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{587:function(t,s,e){"use strict";e.r(s);var _=e(0),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"web-기초-정리"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-기초-정리"}},[t._v("#")]),t._v(" Web 기초 정리")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#_1-프로세서와-스레드의-차이점"}},[t._v("1. 프로세서와 스레드의 차이점")])]),e("li",[e("a",{attrs:{href:"#_2-was에-사용목적과-종류"}},[t._v("2. WAS에 사용목적과 종류")])]),e("li",[e("a",{attrs:{href:"#_3-session과-cookie의-차이점"}},[t._v("3. session과 cookie의 차이점")])]),e("li",[e("a",{attrs:{href:"#_4-get-post-요청"}},[t._v("4. get, post 요청")])]),e("li",[e("a",{attrs:{href:"#_5-model1-vs-model2-방식의-차이점"}},[t._v("5. MODEL1 vs MODEL2 방식의 차이점")])]),e("li",[e("a",{attrs:{href:"#_6-dispatcher와-redirect의-차이점"}},[t._v("6. Dispatcher와 Redirect의 차이점")])]),e("li",[e("a",{attrs:{href:"#_7-웹표준과-웹접근성의-정의와-세부구현-방법"}},[t._v("7. 웹표준과 웹접근성의 정의와 세부구현 방법")])]),e("li",[e("a",{attrs:{href:"#_8-기존-자바스크립트와-node-js의-차이점"}},[t._v("8. 기존 자바스크립트와 node.js의 차이점")])])])]),e("p"),t._v(" "),e("h3",{attrs:{id:"_1-프로세서와-스레드의-차이점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-프로세서와-스레드의-차이점"}},[t._v("#")]),t._v(" 1. 프로세서와 스레드의 차이점")]),t._v(" "),e("ul",[e("li",[t._v("프로세서 - 독립된 하나의 프로그램. 현재 메모리를 할당받아 실행중인 프로그램")]),t._v(" "),e("li",[t._v("스레드 - 프로세스 내의 작업단위. (실행흐름은 하나(SigleThread)일수도, 여러개(MultiThread)일 수도 있다.")])]),t._v(" "),e("h3",{attrs:{id:"_2-was에-사용목적과-종류"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-was에-사용목적과-종류"}},[t._v("#")]),t._v(" 2. WAS에 사용목적과 종류")]),t._v(" "),e("ul",[e("li",[t._v("Web Application Server의 줄임말로 클라이언트의 요청을 응답해서 처리해주고 결과를 출력하는 것이다.\n종류에는 톰캣, 제우스, 웹로직, 웹스피어 등이 있다.")])]),t._v(" "),e("h3",{attrs:{id:"_3-session과-cookie의-차이점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-session과-cookie의-차이점"}},[t._v("#")]),t._v(" 3. session과 cookie의 차이점")]),t._v(" "),e("ul",[e("li",[t._v("공통점 - http 프로토콜이 페이지간의 연계성을 보장 못하는 부분에서 페이지간 연결을 위해 사용된다.\n차이점")]),t._v(" "),e("li",[t._v("session - 서버에 내용을 저장, 서버에서 필요할때마다 꺼내쓴다. 일반로그인")]),t._v(" "),e("li",[t._v("cookie - 클라이언트에 내용을 저장, 이동할때마다 함께 이동한다, 보안에 취약하다. 긴 로그인")])]),t._v(" "),e("h3",{attrs:{id:"_4-get-post-요청"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-get-post-요청"}},[t._v("#")]),t._v(" 4. get, post 요청")]),t._v(" "),e("ul",[e("li",[t._v("get - 정보 전송시 사용, Url을 통해 데이터 전송, 보낼때 데이터가 한정적으로 보내진다. 주소에 데이터가 노출된다.")]),t._v(" "),e("li",[t._v("post - 정보 갱신시 사용, 데이터를 인코딩하여 서버로 전송한다.")])]),t._v(" "),e("h3",{attrs:{id:"_5-model1-vs-model2-방식의-차이점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-model1-vs-model2-방식의-차이점"}},[t._v("#")]),t._v(" 5. MODEL1 vs MODEL2 방식의 차이점")]),t._v(" "),e("ul",[e("li",[t._v("MODEL1 - 뷰와 컨트롤러 구분이 없고 JSP,Servlet만 사용된다. 개발이 빠르고 쉽지만 내용이 방대하고 코드의 구분이 없고\n복잡하여 유지보수가 어렵다.")]),t._v(" "),e("li",[t._v("MODEL2 - Servlet에서 모델,뷰,컨트롤러 분리가 되어있다. 데이터 처리, 작업의 효율성이 향상되어 유지보수와 확장성에서\n유리하다, 개발 초기 아키텍체 디자인 부분에서 시간이 소요될 수 있다.")])]),t._v(" "),e("h3",{attrs:{id:"_6-dispatcher와-redirect의-차이점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-dispatcher와-redirect의-차이점"}},[t._v("#")]),t._v(" 6. Dispatcher와 Redirect의 차이점")]),t._v(" "),e("ul",[e("li",[t._v("Dispatcher - 새로운 페이지 요청이 아닌 기존 요청에서의 연장성이다. 기존의 데이터를 가지고 있다.")]),t._v(" "),e("li",[t._v("Redirect - 새로운 요청이다. 고로 기존의 데이터가 존재하지 않는다. 데이터 전송시 Get 방식으로 데이터를 보내야한다.")])]),t._v(" "),e("h3",{attrs:{id:"_7-웹표준과-웹접근성의-정의와-세부구현-방법"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-웹표준과-웹접근성의-정의와-세부구현-방법"}},[t._v("#")]),t._v(" 7. 웹표준과 웹접근성의 정의와 세부구현 방법")]),t._v(" "),e("ul",[e("li",[t._v("웹표준 - W3C(월드와이드앱컨소시엄) 권고에 따라 html, js, css 작성하고 dom 원칙에 따라 구조화된 것 (HTML5)")]),t._v(" "),e("li",[t._v("디자인과 내용을 구분해야 한다.")]),t._v(" "),e("li",[t._v("H, List를 구조화 해야된다.")]),t._v(" "),e("li",[t._v("웹접근성 : 표준 뿐만 아니라 기타 다른 형식으로도 웹을 접근할 수 있도록 만든 것.")]),t._v(" "),e("li",[t._v("IMG태그에 ALT를 사용하여 텍스트 제공등 속성을 넣을 수 있다.")])]),t._v(" "),e("h3",{attrs:{id:"_8-기존-자바스크립트와-node-js의-차이점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-기존-자바스크립트와-node-js의-차이점"}},[t._v("#")]),t._v(" 8. 기존 자바스크립트와 node.js의 차이점")]),t._v(" "),e("ul",[e("li",[t._v("자바스크립트 - 브라우저안에서만 작동 할 수 있다. 브라우저안에서 파싱되어 실행되어진다.")]),t._v(" "),e("li",[t._v("node.js -  자바스크립트를 서버사이드에서 동작이 가능하도록 개발하는 소프트웨어 플랫폼이다.")]),t._v(" "),e("li",[t._v("내장 http 서버 라이브러리를 포함하고 있어 웹 서버가 없이 동작하는 것이 가능하다.")]),t._v(" "),e("li",[t._v("자바스크립트 프론트엔드, 백엔드 모두 관리가 가능하다. 비동기식으로 빠른 병렬처리가 가능하다.")]),t._v(" "),e("li",[t._v("모듈설치함으로 기능을 확장할 수 있다.")])])])}),[],!1,null,null,null);s.default=a.exports}}]);