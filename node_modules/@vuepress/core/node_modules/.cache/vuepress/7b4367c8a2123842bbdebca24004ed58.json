{"remainingRequest":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/gwangtae/github/private-study/study-collection/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/gwangtae/github/private-study/study-collection/docs/npbrain/2024-01-09.md?vue&type=template&id=57a8da44&","dependencies":[{"path":"/Users/gwangtae/github/private-study/study-collection/docs/npbrain/2024-01-09.md","mtime":1704757884921},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js","mtime":1701335624521},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1701335627564},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js","mtime":1701335624521},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/index.js","mtime":1701335627564},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/@vuepress/markdown-loader/index.js","mtime":1701335624154}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}