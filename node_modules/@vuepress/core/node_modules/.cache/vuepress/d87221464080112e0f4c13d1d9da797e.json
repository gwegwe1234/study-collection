{"remainingRequest":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/gwangtae/github/private-study/study-collection/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/gwangtae/github/private-study/study-collection/docs/npbrain/three-year-economy.md?vue&type=template&id=d079a622&","dependencies":[{"path":"/Users/gwangtae/github/private-study/study-collection/docs/npbrain/three-year-economy.md","mtime":1697460989954},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js","mtime":1694403527154},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1694403529829},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js","mtime":1694403527154},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/index.js","mtime":1694403529828},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/@vuepress/markdown-loader/index.js","mtime":1694403526814}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}