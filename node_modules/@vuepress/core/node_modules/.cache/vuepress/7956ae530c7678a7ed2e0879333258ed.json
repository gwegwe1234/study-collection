{"remainingRequest":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/gwangtae/github/private-study/study-collection/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/gwangtae/github/private-study/study-collection/docs/backend/backend-roadmap.md?vue&type=template&id=8c54b74a&","dependencies":[{"path":"/Users/gwangtae/github/private-study/study-collection/docs/backend/backend-roadmap.md","mtime":1670995033601},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js","mtime":1670995051724},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1670995055037},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/cache-loader/dist/cjs.js","mtime":1670995051724},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/vue-loader/lib/index.js","mtime":1670995055036},{"path":"/Users/gwangtae/github/private-study/study-collection/node_modules/@vuepress/markdown-loader/index.js","mtime":1670995051325}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}