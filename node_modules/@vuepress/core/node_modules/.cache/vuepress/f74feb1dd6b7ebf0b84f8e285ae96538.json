{"remainingRequest":"/Users/ted/github/study-collection/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ted/github/study-collection/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ted/github/study-collection/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/ted/github/study-collection/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/ted/github/study-collection/docs/book/clean-code/13.md?vue&type=template&id=7eb1c64d&","dependencies":[{"path":"/Users/ted/github/study-collection/docs/book/clean-code/13.md","mtime":1574816339561},{"path":"/Users/ted/github/study-collection/node_modules/cache-loader/dist/cjs.js","mtime":1574771322522},{"path":"/Users/ted/github/study-collection/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1574771325204},{"path":"/Users/ted/github/study-collection/node_modules/cache-loader/dist/cjs.js","mtime":1574771322522},{"path":"/Users/ted/github/study-collection/node_modules/vue-loader/lib/index.js","mtime":1574771325204},{"path":"/Users/ted/github/study-collection/node_modules/@vuepress/markdown-loader/index.js","mtime":1574771322140}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}