{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{746:function(a,t,s){\"use strict\";s.r(t);var r=s(0),v=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"_5강\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5강\"}},[a._v(\"#\")]),a._v(\" 5강\")]),a._v(\" \"),s(\"p\"),s(\"div\",{staticClass:\"table-of-contents\"},[s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#자율적인-책임\"}},[a._v(\"자율적인 책임\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#설계의-품질을-좌우하는-책임\"}},[a._v(\"설계의 품질을 좌우하는 책임\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#자신의-의지에-따라-증언할-수-있는-자유\"}},[a._v(\"자신의 의지에 따라 증언할 수 있는 자유\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#너무-추상적인-책임\"}},[a._v(\"너무 추상적인 책임\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#어떻게-가-아니라-무엇-을\"}},[a._v(\"'어떻게'가 아니라 '무엇'을\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#책임을-자극하는-메세지\"}},[a._v(\"책임을 자극하는 메세지\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#메세지와-메소드\"}},[a._v(\"메세지와 메소드\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#메세지\"}},[a._v(\"메세지\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#메소드\"}},[a._v(\"메소드\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#다형성\"}},[a._v(\"다형성\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#유연하고-확장-가능하고-재사용성이-높은-협력의-의미\"}},[a._v(\"유연하고 확장 가능하고 재사용성이 높은 협력의 의미\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#송신자와-수신자를-약하게-연결하는-메세지\"}},[a._v(\"송신자와 수신자를 약하게 연결하는 메세지\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#메세지를-따라라\"}},[a._v(\"메세지를 따라라\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#객체지향의-핵심-메세지\"}},[a._v(\"객체지향의 핵심, 메세지\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#책임-주도-설계-다시-살펴보기\"}},[a._v(\"책임-주도 설계 다시 살펴보기\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#what-who-사이클\"}},[a._v(\"What/Who 사이클\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#묻지-말고-시켜라\"}},[a._v(\"묻지 말고 시켜라\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#메세지를-믿어라\"}},[a._v(\"메세지를 믿어라\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#객체-인터페이스\"}},[a._v(\"객체 인터페이스\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#인터페이스\"}},[a._v(\"인터페이스\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#메세지가-인터페이스를-결정한다\"}},[a._v(\"메세지가 인터페이스를 결정한다\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#공용-인터페이스\"}},[a._v(\"공용 인터페이스\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#인터페이스와-구현의-분리\"}},[a._v(\"인터페이스와 구현의 분리\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#객체-관점에서-생각하는-방법\"}},[a._v(\"객체 관점에서 생각하는 방법\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#구현\"}},[a._v(\"구현\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#인터페이스와-구현의-분리-원칙\"}},[a._v(\"인터페이스와 구현의 분리 원칙\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#캡슐화\"}},[a._v(\"캡슐화\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#책임의-자율성이-협력의-품질을-결정한다\"}},[a._v(\"책임의 자율성이 협력의 품질을 결정한다\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#정리\"}},[a._v(\"정리\")])])])]),s(\"p\"),a._v(\" \"),s(\"h2\",{attrs:{id:\"자율적인-책임\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#자율적인-책임\"}},[a._v(\"#\")]),a._v(\" 자율적인 책임\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"설계의-품질을-좌우하는-책임\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#설계의-품질을-좌우하는-책임\"}},[a._v(\"#\")]),a._v(\" 설계의 품질을 좌우하는 책임\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"객체가 어떤 행동을 하는 유일한 이유는 다른 객체들로부터 요청을 수신했기 때문이다.\")]),a._v(\" \"),s(\"li\",[a._v(\"요청을 처리하기 위해 객체가 수행하는 행동을 \"),s(\"code\",[a._v(\"책임\")]),a._v(\" 이라고 한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"따라서 자율적인 객체란 스스로의 의지와 판단에 따라 각자 맡은 책임을 수행하는 객체를 말한다.\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"자신의-의지에-따라-증언할-수-있는-자유\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#자신의-의지에-따라-증언할-수-있는-자유\"}},[a._v(\"#\")]),a._v(\" 자신의 의지에 따라 증언할 수 있는 자유\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"앨리스 예시로 돌아가 보자\")])]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"증인은 단순히 증언하라는 요청을 받으면, \\n어떤식으로 증언을 하건 그건 그 증인(객체)의 자유이다.\\n\\n만약 왕이 모자 장수에게 좀더 상세하게 증안하라고 요청하면, \\n모자 장수는 왕과 협력하기 위해 요청한 내용들에 대해서 구체적으로 증언한다.\\n\")])])]),s(\"ul\",[s(\"li\",[a._v(\"첫 번째는 자유롭고, 두 번째는 자유의 범위를 제한한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"두 번째 케이스는 모자 장수가 책임을 수행하기 위해, 자신이 원하는 방법대로 증언을 못한다. 즉 자율적으로 책임을 수행할 수가 없다.\")]),a._v(\" \"),s(\"li\",[a._v(\"객체가 자율적이기 위해서는 객체에게 할당되는 책임의 수준 역시 자율적이어야 한다.\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"너무-추상적인-책임\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#너무-추상적인-책임\"}},[a._v(\"#\")]),a._v(\" 너무 추상적인 책임\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"무조건 자유롭고 추상적인 책임이라고 좋은것만은 아니다.\")]),a._v(\" \"),s(\"li\",[a._v(\"너무 구체적인거도 별로지만, 너무 추상적이면 의도를 명확하게 표현을 못 할 가능성이 있다.\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"어떻게-가-아니라-무엇-을\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#어떻게-가-아니라-무엇-을\"}},[a._v(\"#\")]),a._v(\" '어떻게'가 아니라 '무엇'을\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[a._v(\"증언하라\")]),a._v(\"라는 무엇을 이 중요한거지 \"),s(\"code\",[a._v(\"어떻게\")]),a._v(\" 하는지에 대해선 자율적으로 선택하게 해주면 자율성이 크게 보장된다.\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"책임을-자극하는-메세지\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#책임을-자극하는-메세지\"}},[a._v(\"#\")]),a._v(\" 책임을 자극하는 메세지\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"책임이라는 단어에는 어떤 행동을 수행한다는 의미가 포함\")]),a._v(\" \"),s(\"li\",[a._v(\"책임을 수행하려면 반드시 메세지를 수신해야 한다.\")])]),a._v(\" \"),s(\"h2\",{attrs:{id:\"메세지와-메소드\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#메세지와-메소드\"}},[a._v(\"#\")]),a._v(\" 메세지와 메소드\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"메세지\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#메세지\"}},[a._v(\"#\")]),a._v(\" 메세지\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"메세지를 가리키는 '증언하라'는 메세지 이름이다.\")]),a._v(\" \"),s(\"li\",[a._v(\"메세지를 전송할 때 추가적인 정보가 필요할 경우 메세지의 인자를 통해 추가정보를 제공한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"증언하라(어제, 왕국) 이런식으로\")]),a._v(\" \"),s(\"li\",[a._v(\"당연히 개발 언어마다 메세지의 형식은 다르다.\")]),a._v(\" \"),s(\"li\",[a._v(\"메세지는 객체들이 서로 협력하기 위해 사용하는 유일한 의사소통 수단\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"메소드\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#메소드\"}},[a._v(\"#\")]),a._v(\" 메소드\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"객체가 메세지를 처리하기 위해 내부적으로 선택하는 방법을 \"),s(\"code\",[a._v(\"메소드\")]),a._v(\"라고 한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"왕이 증언하라 는 메세지를 처리하기 위해 모자 장수가 내부적으로 선택하는 증언 방법이 \"),s(\"code\",[a._v(\"메소드\")])]),a._v(\" \"),s(\"li\",[a._v(\"메세지는 \"),s(\"code\",[a._v(\"어떻게\")]),a._v(\" 수행될 것인지는 명시하지 않는다.\")]),a._v(\" \"),s(\"li\",[a._v(\"어떤 메소드를 선택할 것인지는 수신자의 결정에 좌우된다.\")]),a._v(\" \"),s(\"li\",[a._v(\"메세지를 수신한 객체가 실행 시간에 메소드를 선택할 수 있다는 사실은 객체지향 프로그래밍 언어의 핵심이라고 볼 수 있다.\")]),a._v(\" \"),s(\"li\",[a._v(\"(자바로 치면 service.getMethod()를 해도 실제로 service가 어떤 getMethod() 메소드를 사용할지는 호출되는 객체가 직접 고른다 - 인터페이스에서 호출할 객체를 찾는다 라고 보면 될듯)\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"다형성\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#다형성\"}},[a._v(\"#\")]),a._v(\" 다형성\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[a._v(\"다형성\")]),a._v(\"이란 서로 다른 유형의 객체가 동일한 메세지에 대해 서로 다르게 반응하는 것을 의미한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"즉 서로 다른 타입에 속하는 객체들이 동일한 메세지를 수신할 경우 서로 다른 메소드를 이용해 메세지를 처리할 수 있는 메커니즘을 말한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"메세지는 \"),s(\"code\",[a._v(\"무엇\")]),a._v(\"을 실행될지는 명시하지만 메세지를 \"),s(\"code\",[a._v(\"어떻게\")]),a._v(\" 실행할 것인지는 전적으로 수신자가 결정한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"앨리스 예시로 보면, 모자장수, 요리사, 앨리스는 모두 왕이 전송한 '증언하라'라는 메세지를 이해하지만, 처리는 각자 알아서한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"중요한 건 메세지 송신자의 관점에서는 메세지 수신자들이 어떻게 처리하건 말건 이 객체들이 동일한 책임을 수행한다는 것이다. -> 대체 가능성\")]),a._v(\" \"),s(\"li\",[a._v(\"결국 걍 인터페이싱해서 인터페이스로 받으면 어떤 객체가 선택되느냐에 따라 실행되는 메소드가 달라진다 이거같음\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"유연하고-확장-가능하고-재사용성이-높은-협력의-의미\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#유연하고-확장-가능하고-재사용성이-높은-협력의-의미\"}},[a._v(\"#\")]),a._v(\" 유연하고 확장 가능하고 재사용성이 높은 협력의 의미\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"송신자는 수신자가 어떻게 처리하건 관심이 없어서 매우 적은 정보만 알아도 상호 협력이 가능하다. -> 설계 품질에 큰 영향을 미침\")])]),a._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"1.\")]),a._v(\" 협력이 유연해진다\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\" 송신자는 수신자가 메세지를 이해하면 누구건 노상관이다\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\" 즉 수신자가 마구 바뀔 수 있으므로 유연\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2.\")]),a._v(\" 협력이 수행되는 방식 확장 가능\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\" 송신자에게 아무 영향없이 수신자를 바꿀 수 있으므로 협력의 세부적인 수행 방식 수정이 쉽다\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\" 수신자가 방법을 바꾸거나 수신자가 바껴도 노상관\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"3.\")]),a._v(\" 협력이 수행되는 방식 재사용 가능\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\" 수신자 대체가 가능하므로 협력 재사용이 가능하다\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[a._v(\"예전부터 느낀거지만 결국 객체 만들고 송신 수신하게 하면서 퍼즐 맞추기 하는거 같다..\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"송신자와-수신자를-약하게-연결하는-메세지\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#송신자와-수신자를-약하게-연결하는-메세지\"}},[a._v(\"#\")]),a._v(\" 송신자와 수신자를 약하게 연결하는 메세지\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"송신자와 수신자 간의 결합도를 낮춰 설계를 유연, 확장 가능, 재사용 가능하게 만든다.\")])]),a._v(\" \"),s(\"h2\",{attrs:{id:\"메세지를-따라라\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#메세지를-따라라\"}},[a._v(\"#\")]),a._v(\" 메세지를 따라라\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"객체지향의-핵심-메세지\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#객체지향의-핵심-메세지\"}},[a._v(\"#\")]),a._v(\" 객체지향의 핵심, 메세지\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"너무 클래스에 의존하진 말자\")]),a._v(\" \"),s(\"li\",[a._v(\"객체지향의 핵심은 정적인 클래스가 아닌 메세지를 주고받는 동적인 객체들의 집합이다.\")]),a._v(\" \"),s(\"li\",[a._v(\"제일 흔히 하는 실수면서 안좋은 실수는, 객체 내부의 데이터 구조를 먼저 생각하고 데이터 조작에 필요한 오퍼레이션을 나중에 고려하는 것이다. (즉 TDD를 하게 되면 이런 문제가 자연스럽게 해결되겠다..! 먼저 비어있는 실패하는 오퍼레이션부터 쫙 짜고, 내부 구현을 하니까. 좀 더 파보자)\")]),a._v(\" \"),s(\"li\",[a._v(\"데이터를 중심으로 객체를 설계하면 데이터에 종속돼서 자율성이 떨어진다.\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"책임-주도-설계-다시-살펴보기\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#책임-주도-설계-다시-살펴보기\"}},[a._v(\"#\")]),a._v(\" 책임-주도 설계 다시 살펴보기\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"메세지가 수신자의 책임을 결정\")]),a._v(\" \"),s(\"li\",[a._v(\"책임 완수를 위해 다른 객체의 도움이 필요하면 또 다른 메세지 전송\")]),a._v(\" \"),s(\"li\",[a._v(\"반복\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"what-who-사이클\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#what-who-사이클\"}},[a._v(\"#\")]),a._v(\" What/Who 사이클\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"책임-주도 설계으 핵심은 어떤 행위가 필요한지를 먼저 결정한 후에 이 행위를 수정할 객체를 결정하는 것\")]),a._v(\" \"),s(\"li\",[a._v(\"어떤 행위(메세지)를 누구에게 할지가 핵심\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"묻지-말고-시켜라\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#묻지-말고-시켜라\"}},[a._v(\"#\")]),a._v(\" 묻지 말고 시켜라\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"책임-주도 설계는 객체가 아니라 객체들이 주고받는 메세지에 초점을 맞춰 객체지향의 장점을 극대화 한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"송신자는 수신자 내부를 볼수 없어 자연스럽게 \"),s(\"code\",[a._v(\"캡슐화\")]),a._v(\"를 증진시킨다.\")]),a._v(\" \"),s(\"li\",[a._v(\"수신자 내부를 알 수 없어 느슨한 결합이 된다.\")]),a._v(\" \"),s(\"li\",[a._v(\"객체는 다른 객체의 상태를 묻지 말아야 한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"결과적으로 묻지말고 시켜라 방식은 객체를 자율적으로 마들고, 캡슐화 보장, 느슨한 결합을 해서 설계를 유연하게 해준다.\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"메세지를-믿어라\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#메세지를-믿어라\"}},[a._v(\"#\")]),a._v(\" 메세지를 믿어라\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"메세지를 믿으면 자율적인 책임은 따라온다.\")])]),a._v(\" \"),s(\"h2\",{attrs:{id:\"객체-인터페이스\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#객체-인터페이스\"}},[a._v(\"#\")]),a._v(\" 객체 인터페이스\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"인터페이스\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#인터페이스\"}},[a._v(\"#\")]),a._v(\" 인터페이스\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"세상에서 사람이건 사물이건 세계에 존재하는 그 어떤 대상과 상호 작용하고 싶으면 그 대상이 제공하는 인터페이스 사용법을 익혀야 한다. (ex. TV를 사용하기 위한 인터페이스는 리모컨 ㅎㅎ)\")])]),a._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"1.\")]),a._v(\" 인터페이스의 사용법을 익히기만 하면 내부 구조나 동작 방식따윈 몰라도 대상을 쉽게 조작하거나 의사 전달이 가능\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2.\")]),a._v(\" 인터페이스 자체는 변경하지 않고 단순히 내부 구성이나 작동 방식만을 변경하는 것은 인터페이스 사용자에게 어떤 영향도 미치지 않는다\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"3.\")]),a._v(\" 대상이 변경되어도 동일한 인터페이스를 제공하기만 하면 아무런 문제없이 상호작용 가능\\n\")])])]),s(\"h3\",{attrs:{id:\"메세지가-인터페이스를-결정한다\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#메세지가-인터페이스를-결정한다\"}},[a._v(\"#\")]),a._v(\" 메세지가 인터페이스를 결정한다\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"객체의 인터페이스는 객체가 수신할 수 있는 메세지의 목록으로 구성되며 객체가 어떤 메세지를 수신할 수 있는지가 객체가 제공하는 인터페이스의 모양을 빚는다.\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"공용-인터페이스\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#공용-인터페이스\"}},[a._v(\"#\")]),a._v(\" 공용 인터페이스\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"모두가 인터페이스에 접근할 순 없다\")]),a._v(\" \"),s(\"li\",[a._v(\"접근 가능하도록 공개된 인터페이스와 내부에서만 접근 가능한 인터페이스가 나눠져 있다.\")]),a._v(\" \"),s(\"li\",[a._v(\"공용이건 내부건 모든 인터페이스는 메세지 전송을 통해서만 접근이 가능하다.\")])]),a._v(\" \"),s(\"h2\",{attrs:{id:\"인터페이스와-구현의-분리\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#인터페이스와-구현의-분리\"}},[a._v(\"#\")]),a._v(\" 인터페이스와 구현의 분리\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"객체-관점에서-생각하는-방법\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#객체-관점에서-생각하는-방법\"}},[a._v(\"#\")]),a._v(\" 객체 관점에서 생각하는 방법\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[a._v(\"객체지향적인 사고방식을 이해하기 위한 원칙\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"1.\")]),a._v(\" 좀 더 추상적인 인터페이스 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\":\")]),a._v(\" 책임은 좀 더 추상적으로\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2.\")]),a._v(\" 최소 인터페이스 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\":\")]),a._v(\" 외부 노출은 최소화\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"3.\")]),a._v(\" 인터페이스와 구현 간에 차이가 있다는 점을 인식 \\n\")])])]),s(\"h3\",{attrs:{id:\"구현\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#구현\"}},[a._v(\"#\")]),a._v(\" 구현\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"내부 구조와 작동 방식을 가리키는 고유 용어는 구현(implementation)\")]),a._v(\" \"),s(\"li\",[a._v(\"객체의 외부와 내부를 분리하라는 소리는 결국 객체의 공용 인터페이스와 구현을 명확하게 분리하라는 것\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"인터페이스와-구현의-분리-원칙\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#인터페이스와-구현의-분리-원칙\"}},[a._v(\"#\")]),a._v(\" 인터페이스와 구현의 분리 원칙\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"훌륭한 객체란 구현을 모른 채 인터페이스만 알면 쉽게 상호작용할 수 있는 객체를 의미\")]),a._v(\" \"),s(\"li\",[a._v(\"구현은 꽁꽁 숨기자\")]),a._v(\" \"),s(\"li\",[a._v(\"인터페이스와 구현의 분리 원칙이 중요한 이유는 무엇인가 ? ==> \"),s(\"code\",[a._v(\"소프트웨어는 항상 변경되기 때문에\")])]),a._v(\" \"),s(\"li\",[a._v(\"즉 호출하는 쪽에서는 인터페이스만 알고싶은데 구현까지 알아야된다면, 구현이 변경될 경우 매번 바꿔야한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"매우 거지같으므로 인터페이싱 - 구현은 분리하자\")])]),a._v(\" \"),s(\"h3\",{attrs:{id:\"캡슐화\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#캡슐화\"}},[a._v(\"#\")]),a._v(\" 캡슐화\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"객체의 자율성을 보존하기 위해 구현을 외부로부터 감추는 것을 \"),s(\"code\",[a._v(\"캡슐화\")]),a._v(\"라고 한다.\")]),a._v(\" \"),s(\"li\",[a._v(\"캡슐화는 정보 은닉이라고도 부른다.\")])]),a._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\" 상태와 행위의 캡슐화\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" 데이터 캡슐화\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" 데이터 캡슐화는 자율적인 객체를 만들기 위한 전제 조건\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"자율적으로 상태 관리를 위해\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\" 사적인 비밀의 캡슐화\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" 내부 상태를 외부가 건드릴 수 없도록 캡슐화를 해줘야 한다\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" 외부에서 객체와 의사소통할 수 있도록 하는 고정 통로를 공용 인터페이스라고 한다\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"책임의-자율성이-협력의-품질을-결정한다\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#책임의-자율성이-협력의-품질을-결정한다\"}},[a._v(\"#\")]),a._v(\" 책임의 자율성이 협력의 품질을 결정한다\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"1.\")]),a._v(\" 자율적인 책임은 협력을 단순하게 만든다 \\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"->\")]),a._v(\" 세부 사항을 무시하고 의도를 드러내는 하나의 문장으로 표현해 협력을 단순화\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2.\")]),a._v(\" 자율적인 책임은 모자 장수의 외부와 내부를 명확하게 분리\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"->\")]),a._v(\" 어떤 방법을 선택할 지는 모자장수의 권한 \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"캡슐화\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"3.\")]),a._v(\" 책임이 자율적일 경우 책임을 수행하는 내부적인 방법을 변경해도 외부에 영향 x\\n   \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"4.\")]),a._v(\" 자율적인 책임은 협력의 대상을 다양하게 선택할 수 있는 유연성 제공\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"5.\")]),a._v(\" 객체가 수행하는 책임들이 자율적일수록 객체의 역할을 이해하기 쉬워짐\\n\")])])]),s(\"h2\",{attrs:{id:\"정리\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#정리\"}},[a._v(\"#\")]),a._v(\" 정리\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"결국 메세지는 호출하는 방법 (어떤 메소드를 호출해서 처리할건가?)\")]),a._v(\" \"),s(\"li\",[a._v(\"메소드는 그 방법을 구체화한 것\")]),a._v(\" \"),s(\"li\",[a._v(\"인터페이스는 어떤 메소드들을 쓸지 모아놓은 틀이다. (이 틀을 통해서만 호출하는 객체들은 호출을 한다. 이게 이상적)\")]),a._v(\" \"),s(\"li\",[a._v(\"송신 객체는 인터페이스를 통해 메세지를 호출하고, 적절한 객체를 찾아 메소드를 실행한다.\")])])])}),[],!1,null,null,null);t.default=v.exports}}]);","extractedComments":[]}