{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{246:function(t,s,a){t.exports=a.p+\"assets/img/go4-1.9b2829e0.png\"},247:function(t,s,a){t.exports=a.p+\"assets/img/go4-2.4fec9ea2.png\"},248:function(t,s,a){t.exports=a.p+\"assets/img/go4-3.20593db0.png\"},249:function(t,s,a){t.exports=a.p+\"assets/img/go4-4.a42f6278.png\"},250:function(t,s,a){t.exports=a.p+\"assets/img/go4-5.606368aa.png\"},251:function(t,s,a){t.exports=a.p+\"assets/img/go4-6.8520863d.png\"},252:function(t,s,a){t.exports=a.p+\"assets/img/go4-7.c37b7096.png\"},253:function(t,s,a){t.exports=a.p+\"assets/img/go4-8.41f7db5a.png\"},254:function(t,s,a){t.exports=a.p+\"assets/img/go4-9.b583dff0.png\"},255:function(t,s,a){t.exports=a.p+\"assets/img/go4-10.fe51e243.png\"},256:function(t,s,a){t.exports=a.p+\"assets/img/go4-11.5f109499.png\"},257:function(t,s,a){t.exports=a.p+\"assets/img/go4-12.6cd79959.png\"},258:function(t,s,a){t.exports=a.p+\"assets/img/go4-13.8beb3811.png\"},259:function(t,s,a){t.exports=a.p+\"assets/img/go4-14.78d44e03.png\"},260:function(t,s,a){t.exports=a.p+\"assets/img/go4-15.a65369be.png\"},261:function(t,s,a){t.exports=a.p+\"assets/img/go4-16.03b737de.png\"},262:function(t,s,a){t.exports=a.p+\"assets/img/go4-17.346947ff.png\"},263:function(t,s,a){t.exports=a.p+\"assets/img/go4-18.55677f72.png\"},264:function(t,s,a){t.exports=a.p+\"assets/img/go4-19.55a3478b.jpg\"},265:function(t,s,a){t.exports=a.p+\"assets/img/go4-20.f05de1e2.jpg\"},664:function(t,s,a){\"use strict\";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"_4강\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4강\"}},[t._v(\"#\")]),t._v(\" 4강\")]),t._v(\" \"),n(\"p\"),n(\"div\",{staticClass:\"table-of-contents\"},[n(\"ul\",[n(\"li\",[n(\"a\",{attrs:{href:\"#_1-배열의-내부-구조-및-원리\"}},[t._v(\"1. 배열의 내부 구조 및 원리\")]),n(\"ul\",[n(\"li\",[n(\"a\",{attrs:{href:\"#_1-1-내부-구조\"}},[t._v(\"1-1. 내부 구조\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_1-2-배열의-선언-및-초기화\"}},[t._v(\"1-2. 배열의 선언 및 초기화\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_1-3-배열-활용하기\"}},[t._v(\"1-3. 배열 활용하기\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_1-4-다차원-배열\"}},[t._v(\"1-4. 다차원 배열\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_1-5-함수에-배열-전달하기\"}},[t._v(\"1-5. 함수에 배열 전달하기\")])])])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_2-슬라이스의-내부-구조-및-원리\"}},[t._v(\"2. 슬라이스의 내부 구조 및 원리\")]),n(\"ul\",[n(\"li\",[n(\"a\",{attrs:{href:\"#_2-1-내부-구조\"}},[t._v(\"2-1. 내부 구조\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_4-2-생성-및-초기화\"}},[t._v(\"4-2. 생성 및 초기화\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_2-3-슬라이스의-활용\"}},[t._v(\"2-3. 슬라이스의 활용\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_2-4-다차원-슬라이스\"}},[t._v(\"2-4. 다차원 슬라이스\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_2-5-슬라이스를-함수에-전달하기\"}},[t._v(\"2-5. 슬라이스를 함수에 전달하기\")])])])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_3-맵의-내부-구조-및-원리\"}},[t._v(\"3. 맵의 내부 구조 및 원리\")]),n(\"ul\",[n(\"li\",[n(\"a\",{attrs:{href:\"#_3-1-내부-구조\"}},[t._v(\"3-1. 내부 구조\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_3-2-생성-및-초기화\"}},[t._v(\"3-2. 생성 및 초기화\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_3-3-맵-활용하기\"}},[t._v(\"3-3. 맵 활용하기\")])]),n(\"li\",[n(\"a\",{attrs:{href:\"#_3-4-맵을-함수에-전달하기\"}},[t._v(\"3-4. 맵을 함수에 전달하기\")])])])])])]),n(\"p\"),t._v(\" \"),n(\"h2\",{attrs:{id:\"_1-배열의-내부-구조-및-원리\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-배열의-내부-구조-및-원리\"}},[t._v(\"#\")]),t._v(\" 1. 배열의 내부 구조 및 원리\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"슬라이스와 맵은 기본적으로 배열을 기초로 구현된 데이터 구조이다.\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_1-1-내부-구조\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-내부-구조\"}},[t._v(\"#\")]),t._v(\" 1-1. 내부 구조\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"Go의 배열은 동일한 타입의 원소가 연속된 블록에 저장되는 고정된 길이 데이터 타입\")]),t._v(\" \"),n(\"li\",[t._v(\"정수나 문자열같은 내장타입에 구조체 타입의 배열도 활용이 가능\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(246),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"배열 값 접근은 인덱스를 통해 가능하다.\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_1-2-배열의-선언-및-초기화\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-배열의-선언-및-초기화\"}},[t._v(\"#\")]),t._v(\" 1-2. 배열의 선언 및 초기화\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"배열을 선언할 땐 저장할 데이터의 타입과 저장할 원소의 개수를 지정하면 된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" array \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"한번 데이터 타입이나 길이를 선언하면 변경이 불가능하다.\")]),t._v(\" \"),n(\"li\",[t._v(\"더많은 배열로 복사를 해야되면, 새로운 배열이 할당되고 복사되는 형태이다.\")]),t._v(\" \"),n(\"li\",[t._v(\"Go에서 변수를 선언하면 이 변수들의 타입에 따라 적당한 제로 값으로 초기화된다.\")]),t._v(\" \"),n(\"li\",[t._v(\"정수 배열이면 0으로 초기화가 된다\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(247),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"배열의 선언과 동시에 초기화하는 방법은 배열 리터럴을 사용하면 된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"array2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"갯수를 ...으로 선언하면 선언된 배열수에 맞춰 생성된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"array3 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"배열의 길이를 선언하고, 그 중 일부만 선언하고 싶다면 아래와 같이 선언한다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"array4 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"위의 배열은 아래 그림과 같이 초기화 된다.\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(248),alt:\"array\"}})]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_1-3-배열-활용하기\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-3-배열-활용하기\"}},[t._v(\"#\")]),t._v(\" 1-3. 배열 활용하기\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"배열은 메모리에 순차적으로 위치하기 때문에 개별 원소 접근에 유리하다.\")]),t._v(\" \"),n(\"li\",[t._v(\"배열 개별 원소에 접근하기 위해선 []안에 인덱스 값을 넣어주면 된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"array5 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\narray5\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"25\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"25\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"배열에 포인터 사용도 가능하다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"array6 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"new\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"new\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"array6\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"array6\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),t._v(\"\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:a(249),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"Go에서 배열은 값으로 취급 받아 연산자와 함께 사용이 가능하다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"array7 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Yellow\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Pink\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" array8 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),t._v(\"\\n\\t\\narray8 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" array7\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:a(250),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"다른 타입은 연산자 사용이 당연히 안된다.\")]),t._v(\" \"),n(\"li\",[t._v(\"포인터 배열을 복사도 가능하다.\")]),t._v(\" \"),n(\"li\",[t._v(\"복사하면 포인터가 가리키는 주소의 값이 아닌 포인터 값 자체가 복사된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" array9 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),t._v(\"\\n\\narray10 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"new\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"new\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"new\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"array10\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Red\"')]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"array10\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Blue\"')]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"array10\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Green\"')]),t._v(\"\\n\\narray9 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" array10\\n\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"array9\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:a(251),alt:\"array\"}})]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_1-4-다차원-배열\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-4-다차원-배열\"}},[t._v(\"#\")]),t._v(\" 1-4. 다차원 배열\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"다차원도 가능하다\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" array \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n\")])])]),n(\"h3\",{attrs:{id:\"_1-5-함수에-배열-전달하기\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-5-함수에-배열-전달하기\"}},[t._v(\"#\")]),t._v(\" 1-5. 함수에 배열 전달하기\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"엄청나게 큰 배열을 넘겨주는 형식이면, 매번 해당 배열이 새로 생성되어 메모리를 많이 먹는다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"func\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" array \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1e6\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"array\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"func\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"array \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1e6\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 매번 메모리 할당\")]),t._v(\"\\n\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"array\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"이런 문제를 해결하기 위해 포인터를 넘겨버리는 방법이 있다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"func\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" array \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1e6\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"\\n\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\"array\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"func\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"array \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1e6\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"array\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"이러면 처음 할당된 8바이트의 메모리만 할당이 되지만, 문제는 주소값 참조라 값이 전부다 변경이 된다.\")])]),t._v(\" \"),n(\"h2\",{attrs:{id:\"_2-슬라이스의-내부-구조-및-원리\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-슬라이스의-내부-구조-및-원리\"}},[t._v(\"#\")]),t._v(\" 2. 슬라이스의 내부 구조 및 원리\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"슬라이스는 데이터 컬렉션을 처리할 수 있는 방법을 제공하는 데이터구조.\")]),t._v(\" \"),n(\"li\",[t._v(\"슬라이스는 동적 배열의 개념으로 구현되었기 때문에 필요에 따라 컬렉션의 크기를 늘리거나 줄일 수 있다.\")]),t._v(\" \"),n(\"li\",[t._v(\"인덱싱, 반복에도 최적화 되어 있다.\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_2-1-내부-구조\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-내부-구조\"}},[t._v(\"#\")]),t._v(\" 2-1. 내부 구조\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"슬라이스는 배열을 추상화하여 조작하는 작은 객체\")]),t._v(\" \"),n(\"li\",[t._v(\"이 객체는 Go가 내부의 배열을 조작하는 데 필요한 메타데이터를 관리하는 세개의 필드로 구성되어 있다.\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(252),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"각각은 내부 배열에 대한 포인터, 슬라이스가 접근할 수 있는 요소의 개수, 최대 수용량이다.\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_4-2-생성-및-초기화\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-2-생성-및-초기화\"}},[t._v(\"#\")]),t._v(\" 4-2. 생성 및 초기화\")]),t._v(\" \"),n(\"h4\",{attrs:{id:\"make함수와-슬라이스-리터럴\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#make함수와-슬라이스-리터럴\"}},[t._v(\"#\")]),t._v(\" make함수와 슬라이스 리터럴\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"make\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"슬라이스 길이만 설정하면, 수용량도 동일해 진다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"make\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"이렇게 선언하면 크기는 5이다\")]),t._v(\" \"),n(\"li\",[t._v(\"길이보다 작은 슬라이스는 생성할 수 없다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Yellow\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Pink\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nslice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"배열과의 차이점은 []안에 길이가 들어가는지 안들어가는지 이다.\")])]),t._v(\" \"),n(\"h4\",{attrs:{id:\"nil-슬라이스와-빈-슬라이스\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nil-슬라이스와-빈-슬라이스\"}},[t._v(\"#\")]),t._v(\" nil 슬라이스와 빈 슬라이스\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"nil 슬라이스는 초기화 코드를 선언하지 않으면 생성된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" slice \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"nil 슬라이스는 Go에서 슬라이스를 생성하는 가장 일반적인 방법이다.\")]),t._v(\" \"),n(\"li\",[t._v(\"슬라이스를 리턴하는 함수가 예외 상황이 발생하여 실제로 존재하지 않는 슬라이스를 리턴해야 할 때 유용하다.\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(253),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"또한 초기화를 통해 빈 슬라이스 생성이 가능하다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"make\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\nslice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:a(254),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"빈 슬라이스 내부 배열에 원소를 전혀 갖고 있지 않기 때문에 저장소가 할당되지 않는다.\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_2-3-슬라이스의-활용\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-슬라이스의-활용\"}},[t._v(\"#\")]),t._v(\" 2-3. 슬라이스의 활용\")]),t._v(\" \"),n(\"h4\",{attrs:{id:\"대입과-잘라내기\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#대입과-잘라내기\"}},[t._v(\"#\")]),t._v(\" 대입과 잘라내기\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"배열 표현식을 사용해 대입이 가능하다\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\nslice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"15\")]),t._v(\"\\n\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"15\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"슬라이스 일부를 잘라내 새로운 슬라이스 생성이 가능하다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"newSlice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"newSlice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"15\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:a(255),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"슬라이스를 잘라내는 것도 결국 특정 위치를 참조하는 것 뿐이라, 한군대서 값이 바뀌면 전부다 바뀐다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nslice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"15\")]),t._v(\"\\n\\nnewSlice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\nnewSlice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"35\")]),t._v(\"\\n\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"newSlice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"15\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"35\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"15\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"35\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:a(256),alt:\"array\"}})]),t._v(\" \"),n(\"h4\",{attrs:{id:\"슬라이스의-크기를-확장하는-방법\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#슬라이스의-크기를-확장하는-방법\"}},[t._v(\"#\")]),t._v(\" 슬라이스의 크기를 확장하는 방법\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"슬라이스는 배열과는 다르게 원할 때 용량을 확장할 수 있다.\")]),t._v(\" \"),n(\"li\",[t._v(\"append 함수를 사용하면 된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nnewSlice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\\nnewSlice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"append\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"newSlice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"60\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"newSlice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"60\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"60\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"쪼갠거니 당연히 값이 바뀐다.\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(257),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"만약 슬라이스 내부 배열에 용량이 부족하면, append 함수는 새로운 내부 배열을 생성하고, 기존의 값들을 복사한 후 새로운 값을 추가한다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nnewSlice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"append\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"60\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"newSlice2\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"60\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:a(258),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"용량이 늘어날 땐, 1000보다 작으면 2배씩 증가하고 1000보다 클땐 25퍼세트씩 늘어난다.\")])]),t._v(\" \"),n(\"h4\",{attrs:{id:\"슬라이스와-세-번째-인덱스\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#슬라이스와-세-번째-인덱스\"}},[t._v(\"#\")]),t._v(\" 슬라이스와 세 번째 인덱스\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"용량을 제한할 때 쓴다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"source \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Apple\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Orange\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Plum\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Banana\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Grape\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"위 슬라이스의 내부 구조는 다음과 같다\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(259),alt:\"array\"}})]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" source\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"이렇게 3개로 자르면, 길이와 용량은 다음과 같다\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"j\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"k\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" 를 실행할 경우\\n길이 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" j \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" i\\n용량 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" k \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" i\\n\")])])]),n(\"p\",[n(\"img\",{attrs:{src:a(260),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"위의 그림처럼 구성된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"source \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Apple\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Orange\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Plum\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Banana\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Grape\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 세 번째 원소를 잘라낸다. 이때 용량을 설정한다. 길이 및 용량이 1로 지정된다.\")]),t._v(\"\\nslice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" source\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 슬라이스에 새로운 문자열을 추가한다\")]),t._v(\"\\nslice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"append\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Kiwi\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"source\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"Plum\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"Plum Kiwi\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"Apple Orange Plum Banana Grape\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"세번째 인덱스를 지정해줌으로써 기존 source 슬라이스에서 Banana 값은 변동이 없다.\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(261),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"슬라이스 두개를 ... 연사자를 이용해 합칠 수도 있다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"s1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\ns2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\ns3 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"append\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s1\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" s2\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])])]),n(\"h4\",{attrs:{id:\"슬라이스의-원소-반복하기\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#슬라이스의-원소-반복하기\"}},[t._v(\"#\")]),t._v(\" 슬라이스의 원소 반복하기\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"range 키워드를 사용하자\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"range\")]),t._v(\" slice \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"range는 인덱스와 값 두개가 리턴된다.\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(262),alt:\"array\"}})]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"range는 참조 리턴이 아닌 값 복사본을 생성한다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"range\")]),t._v(\" slice \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Printf\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"값 : %d 값의 주소 : %x 원소의 주소 : %x\\\\n\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\"value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \\n값 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\" 값의 주소 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" c0000b0020 원소의 주소 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" c00009e020\\n값 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),t._v(\" 값의 주소 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" c0000b0020 원소의 주소 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" c00009e028\\n값 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),t._v(\" 값의 주소 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" c0000b0020 원소의 주소 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" c00009e030\\n값 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),t._v(\" 값의 주소 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" c0000b0020 원소의 주소 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" c00009e038\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"위의 결과를 보면 값의 주소는 동일하다.\")]),t._v(\" \"),n(\"li\",[t._v(\"동일한 공간에 값만 넣는 형태인 것\")]),t._v(\" \"),n(\"li\",[t._v(\"인덱스가 필요없으면 _를 이용하자\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"_\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"range\")]),t._v(\" slice \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Printf\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"값 : %d\\\\n\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"당연히 일반 for 문도 사용 가능하다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"len\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"h3\",{attrs:{id:\"_2-4-다차원-슬라이스\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-4-다차원-슬라이스\"}},[t._v(\"#\")]),t._v(\" 2-4. 다차원 슬라이스\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"슬라이스도 2차이상으로 설정이 가능하다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"100\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"200\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"h3\",{attrs:{id:\"_2-5-슬라이스를-함수에-전달하기\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-5-슬라이스를-함수에-전달하기\"}},[t._v(\"#\")]),t._v(\" 2-5. 슬라이스를 함수에 전달하기\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"함수에 슬라이스를 전달하려면 그냥 슬라이스를 값으로 전달하기만 하면 된다.\")]),t._v(\" \"),n(\"li\",[t._v(\"슬라이스의 크기는 매우 작아서 복사하여 함수로 전달하는 비용이 크지 않다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"func\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tslice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"make\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1e6\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\tslice \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"func\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"slice \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" slice\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"이렇게 foo에다가 슬라이스를 넣어봣자, 슬라이스 자체가 복사될 뿐, 데이터는 그대로 남아있다.\")]),t._v(\" \"),n(\"li\",[t._v(\"즉 용량이 거의 안먹는다는 소리\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(263),alt:\"array\"}})]),t._v(\" \"),n(\"h2\",{attrs:{id:\"_3-맵의-내부-구조-및-원리\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-맵의-내부-구조-및-원리\"}},[t._v(\"#\")]),t._v(\" 3. 맵의 내부 구조 및 원리\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"맵은 키/값의 쌍에 대한 정렬 없는 컬렉션이다.\")]),t._v(\" \"),n(\"li\",[t._v(\"맵은 키를 기준으로 값을 정한다.\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(264),alt:\"array\"}})]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_3-1-내부-구조\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1-내부-구조\"}},[t._v(\"#\")]),t._v(\" 3-1. 내부 구조\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"맵은 해쉬 테이블을 기반으로 구현되어 순서가 보장이 안된다.\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(265),alt:\"array\"}})]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_3-2-생성-및-초기화\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-생성-및-초기화\"}},[t._v(\"#\")]),t._v(\" 3-2. 생성 및 초기화\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"make함수를 사용해도 되고, 리터럴을 사용해도 된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// string key , int value\")]),t._v(\"\\ndict \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"make\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"map\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"int\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//string key, string value\")]),t._v(\"\\ndict2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"map\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Red\"')]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Orange\"')]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"orange\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"키는 슬라이스, 함수, 슬라이스를 가진 구조체를 제외하곤 다 가능하다.\")])]),t._v(\" \"),n(\"h3\",{attrs:{id:\"_3-3-맵-활용하기\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-3-맵-활용하기\"}},[t._v(\"#\")]),t._v(\" 3-3. 맵 활용하기\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 빈 맵 생성\")]),t._v(\"\\ncolors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"map\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 키, 밸류 설정해 값넣기\")]),t._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"red\"')]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"nil 값을 가지는 맵 설정도 가능하다\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 맵을 선언하기만 하면 nil 맵이 설정된다\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" color \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"map\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"키가 존재하는지 안하는지 확인이 중요하다.\")]),t._v(\" \"),n(\"li\",[t._v(\"맵을 조회하기 위해 존재 여부를 알려주는 bool값 플래그를 리턴해 준다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[t._v(\"value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" exists \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" colors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" exists \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Key is not exist\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"맵 안의 값을 삭제할 땐 delete 내장 함수를 쓴다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"delete\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),n(\"h3\",{attrs:{id:\"_3-4-맵을-함수에-전달하기\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-4-맵을-함수에-전달하기\"}},[t._v(\"#\")]),t._v(\" 3-4. 맵을 함수에 전달하기\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"슬라이스와 마찬가지로 맵 껍데기만 복사되서 값이 다같이 변경된다.\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-go extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"func\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tcolors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"map\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Red\"')]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\t\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Yellow\"')]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"yellow\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"_\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"range\")]),t._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"1:\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"removeColor\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"_\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"range\")]),t._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\tfmt\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"2:\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"func\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"removeColor\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"map\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"delete\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"colors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n결과 \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" red\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" yellow\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" yellow\\n\")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}