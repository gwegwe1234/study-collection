{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{756:function(t,a,s){\"use strict\";s.r(a);var r=s(0),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"_2강\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2강\"}},[t._v(\"#\")]),t._v(\" 2강\")]),t._v(\" \"),s(\"p\"),s(\"div\",{staticClass:\"table-of-contents\"},[s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#_2-1-기본-문법\"}},[t._v(\"2.1 기본 문법\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#_2-1-1-주석\"}},[t._v(\"2.1.1 주석\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-1-2-변수-정의하기\"}},[t._v(\"2.1.2 변수 정의하기\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-1-3-식별자\"}},[t._v(\"2.1.3 식별자\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-1-4-가변-변수\"}},[t._v(\"2.1.4 가변 변수\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-1-5-식과-연산자\"}},[t._v(\"2.1.5 식과 연산자\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-기본-타입\"}},[t._v(\"2.2 기본 타입\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-1-정수-타입\"}},[t._v(\"2.2.1 정수 타입\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-2-부동소수점-수\"}},[t._v(\"2.2.2 부동소수점 수\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-3-산술-연산\"}},[t._v(\"2.2.3 산술 연산\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-4-비트연산\"}},[t._v(\"2.2.4 비트연산\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-5-문자타입-char\"}},[t._v(\"2.2.5 문자타입 Char\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-6-수-변환\"}},[t._v(\"2.2.6 수 변환\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-7-불-타입과-논리-연산\"}},[t._v(\"2.2.7 불 타입과 논리 연산\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-2-8-비교와-동등성\"}},[t._v(\"2.2.8 비교와 동등성\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-3-문자열\"}},[t._v(\"2.3 문자열\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#_2-3-1-문자열-템플릿\"}},[t._v(\"2.3.1 문자열 템플릿\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-3-2-기본-문자열-연산\"}},[t._v(\"2.3.2 기본 문자열 연산\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-4-배열\"}},[t._v(\"2.4 배열\")]),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"#_2-4-1-배열-정의하기\"}},[t._v(\"2.4.1 배열 정의하기\")])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-4-2-배열-사용하기\"}},[t._v(\"2.4.2 배열 사용하기\")])])])]),s(\"li\",[s(\"a\",{attrs:{href:\"#_2-5-결론\"}},[t._v(\"2.5 결론\")])])])]),s(\"p\"),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-1-기본-문법\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-기본-문법\"}},[t._v(\"#\")]),t._v(\" 2.1 기본 문법\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"변수를 정의하는 법, 참조, 함수 호출, 단항/이항 연산자\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-1-1-주석\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-1-주석\"}},[t._v(\"#\")]),t._v(\" 2.1.1 주석\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"3가지 주석 제공\\n\"),s(\"ul\",[s(\"li\",[t._v(\"한줄짜리 : //\")]),t._v(\" \"),s(\"li\",[t._v(\"여러줄 : /* */\")]),t._v(\" \"),s(\"li\",[t._v(\"KDoc 여러줄 : /** */\")])])]),t._v(\" \"),s(\"li\",[t._v(\"코틀린 주석은 주석안에 주석이 가능\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/*\\n여러 줄 주석\\n/* 주석 안에 내포된 주석 */\")]),t._v(\"\\n \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-1-2-변수-정의하기\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-2-변수-정의하기\"}},[t._v(\"#\")]),t._v(\" 2.1.2 변수 정의하기\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"가장 간단한 형태\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" timeInSeconds \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"15\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"val 키워드 : 값을 뜻하는 value\")]),t._v(\" \"),s(\"li\",[t._v(\"변수 식별자 : 새 변수에 이름을 부여\")]),t._v(\" \"),s(\"li\",[t._v(\"변수의 초기값 : = 뒤에 온다\")]),t._v(\" \"),s(\"li\",[t._v(\"세미콜론은 안붙인다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"fun\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" a \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"readLine\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!!\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toInt\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" b \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"readLine\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!!\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toInt\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" b\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"!! 는 널아님 단언\")]),t._v(\" \"),s(\"li\",[t._v(\"변수 타입을 지정하지 않아도 실행되는데, 타입추론을 하기 떄문\")]),t._v(\" \"),s(\"li\",[t._v(\"타입을 명시하려면 변수 이름 뒤에 : 을 붙이고 뒤에 타입을 적어준다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Int \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"40\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" text\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" String \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello!\"')]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"이 경우 초깃값이 지정한 타입에 속해야 한다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Int \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Error\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-1-3-식별자\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-3-식별자\"}},[t._v(\"#\")]),t._v(\" 2.1.3 식별자\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"식별자는 변수나 함수 등 프로그램에 정의된 대상에 붙은 이름\")]),t._v(\" \"),s(\"li\",[t._v(\"문자 / 숫자 / 밑줄 문자만 포함\")]),t._v(\" \"),s(\"li\",[t._v(\"val, fun 등의 하드 키워드는 어디에 있든 키워드로 간주\")]),t._v(\" \"),s(\"li\",[s(\"a\",{attrs:{href:\"https://kotlinlang.org/docs/reference/keyword-reference.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"하드 키워드 목록\"),s(\"OutboundLink\")],1)])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-1-4-가변-변수\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-4-가변-변수\"}},[t._v(\"#\")]),t._v(\" 2.1.4 가변 변수\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"지금까지 본건 불변 변수\")]),t._v(\" \"),s(\"li\",[t._v(\"final이랑 비슷함\")]),t._v(\" \"),s(\"li\",[t._v(\"필요한 경우 var를 사용해 가변 변수를 정의할 수 있다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" sum \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\nsum \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" sum \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\nsum \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" sum \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-1-5-식과-연산자\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-5-식과-연산자\"}},[t._v(\"#\")]),t._v(\" 2.1.5 식과 연산자\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"자바랑 비슷하다\")]),t._v(\" \"),s(\"li\",[t._v(\"a.readLine()같은 호출이나 전위 후위 연산자(++, --)같\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-2-기본-타입\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-기본-타입\"}},[t._v(\"#\")]),t._v(\" 2.2 기본 타입\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"자바랑 비슷한데 자바원시타입과는 미묘하게 다르다\")]),t._v(\" \"),s(\"li\",[t._v(\"박싱같은거가 자동으로 돼서 좀더 간단함\")]),t._v(\" \"),s(\"li\",[t._v(\"자바와는 달리 모든 코틀린 타입은 근본적으로 어떤 클래스 정의를 기반으로 만들어진다\")]),t._v(\" \"),s(\"li\",[t._v(\"즉 Int같은 원시 타입과 비슷한 타입들도 메소드와 프로퍼티를 제공한다\")]),t._v(\" \"),s(\"li\",[t._v(\"예를 들어 Double에 toInt() 메소드같은게 있어서 호출이 가능하다\")]),t._v(\" \"),s(\"li\",[t._v(\"타입은 하위 타입이라는 개념으로 계층화가 가능하다\")]),t._v(\" \"),s(\"li\",[t._v(\"예를 들어 널을 허용하지 않는 모든 코틀린 타입은 Any라는 내장 타입의 직 간접적인 하위타입이다.\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Any \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Int는 Any의 하위 타입이라 괜찮음. Int로 추론\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-2-1-정수-타입\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-1-정수-타입\"}},[t._v(\"#\")]),t._v(\" 2.2.1 정수 타입\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"코틀린에는 정수를 표현하는 네 가지 기본 타입이 있다.\")])]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[t._v(\"이름\")]),t._v(\" \"),s(\"th\",[t._v(\"크기\")]),t._v(\" \"),s(\"th\",[t._v(\"범위\")]),t._v(\" \"),s(\"th\",[t._v(\"대응하는 자바 티입\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[t._v(\"Byte\")]),t._v(\" \"),s(\"td\",[t._v(\"1\")]),t._v(\" \"),s(\"td\",[t._v(\"-128..127\")]),t._v(\" \"),s(\"td\",[t._v(\"Byte\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"Short\")]),t._v(\" \"),s(\"td\",[t._v(\"2\")]),t._v(\" \"),s(\"td\",[t._v(\"-32768..32767\")]),t._v(\" \"),s(\"td\",[t._v(\"Short\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"Int\")]),t._v(\" \"),s(\"td\",[t._v(\"4\")]),t._v(\" \"),s(\"td\",[t._v(\"-2의31승 ... 2의 31승-1\")]),t._v(\" \"),s(\"td\",[t._v(\"Int\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"Long\")]),t._v(\" \"),s(\"td\",[t._v(\"8\")]),t._v(\" \"),s(\"td\",[t._v(\"-2의63승 ... 2의 63승-1\")]),t._v(\" \"),s(\"td\",[t._v(\"Long\")])])])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"정수 타입 값을 표현하는 가장 간단한 리터럴은 10진수\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" n \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"12345\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"자바처럼 리터럴에 _를 넣어서 가독성을 높일 수 있다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" n \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"34_721_189\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"범위만 맞으면 수 리터럴을 크기가 더 작은 타입의 변수에 대입해도 된다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" one\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Byte \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" tooBigForShort\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Short \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"100_000\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Error\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"리터럴에 L이나 l을 붙이면 Long 타입이 됨\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" longValue \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1000L\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"앞에 0b(2진수) 나 0x(16진수)를 붙여 2진수나 16진수로 작성도 가능하다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" bin \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0b10101\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 21\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" hex \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0xF9\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 249\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-2-2-부동소수점-수\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-2-부동소수점-수\"}},[t._v(\"#\")]),t._v(\" 2.2.2 부동소수점 수\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"Float / Double\")]),t._v(\" \"),s(\"li\",[t._v(\"가장 단순한 형태는 10진 소수 형태\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" pi \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3.14\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" one \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1.0\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"정수 부분이 비었으면 0으로 간주\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" quarter \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"25\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" one \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 에러\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" two \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 에러는 아니지만 Int형으로 추론한다\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"과학적 표기볍 리터럴을 허용한다\")]),t._v(\" \"),s(\"li\",[t._v(\"e나 E뒤에 10을 몇번 거듭제곱 하는지를 알려주는 수\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" pi \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.314E1\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 3.14\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" pi100 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.314E3\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 314.0\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"부동소수점 디폴트 리터럴은 Double\")]),t._v(\" \"),s(\"li\",[t._v(\"F 나 f를 붙이면 Float타입이 됨\")]),t._v(\" \"),s(\"li\",[t._v(\"Float나 Double도 특별한 값을 표현하는 몇가지 상수를 제공\\n\"),s(\"ul\",[s(\"li\",[t._v(\"MIN_VALUE, MAX_VALUE\")]),t._v(\" \"),s(\"li\",[t._v(\"NEGATIVE_INFINITY, POSITIVE_INFINITY\")]),t._v(\" \"),s(\"li\",[t._v(\"NaN\")])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-2-3-산술-연산\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-3-산술-연산\"}},[t._v(\"#\")]),t._v(\" 2.2.3 산술 연산\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"생략. 필요햘때 찾자..\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-2-4-비트연산\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-4-비트연산\"}},[t._v(\"#\")]),t._v(\" 2.2.4 비트연산\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"얘도 생략\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-2-5-문자타입-char\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-5-문자타입-char\"}},[t._v(\"#\")]),t._v(\" 2.2.5 문자타입 Char\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"Char타입은 유니코드 한 글자며 16비트\")]),t._v(\" \"),s(\"li\",[t._v(\"이 타입의 리터럴은 작은 따옴표로 문자를 넣는다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" z \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'z'\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-2-6-수-변환\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-6-수-변환\"}},[t._v(\"#\")]),t._v(\" 2.2.6 수 변환\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"각 타입마다 값을 다른 수 타입으로 변환하는 연산이 정의되어 있다\")]),t._v(\" \"),s(\"li\",[t._v(\"toByte(), toShort()...\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-2-7-불-타입과-논리-연산\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-7-불-타입과-논리-연산\"}},[t._v(\"#\")]),t._v(\" 2.2.7 불 타입과 논리 연산\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"false / true\")]),t._v(\" \"),s(\"li\",[t._v(\"! : 논리부정\")]),t._v(\" \"),s(\"li\",[t._v(\"or, and xor\")]),t._v(\" \"),s(\"li\",[t._v(\"||, &&\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-2-8-비교와-동등성\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-8-비교와-동등성\"}},[t._v(\"#\")]),t._v(\" 2.2.8 비교와 동등성\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"위에서 언급한 모든 타입은 비교연산을 제공한다\")]),t._v(\" \"),s(\"li\",[t._v(\"== , !=, <, <= ...\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-3-문자열\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-문자열\"}},[t._v(\"#\")]),t._v(\" 2.3 문자열\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"String\")]),t._v(\" \"),s(\"li\",[t._v(\"자바와 마찬가지로 String은 불변임\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-3-1-문자열-템플릿\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-1-문자열-템플릿\"}},[t._v(\"#\")]),t._v(\" 2.3.1 문자열 템플릿\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v('문자열 리터럴을 정의하는 가장 간단한 방법은 \"\"를 쓴다')])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" hello \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello!\"')]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"문자열에 새줄 문자 같은 특수문자가 들어가면 이스케이프 시퀀스를 사용해야함\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" text \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello, \\\\nThis is\\\\nmultiline\"')]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"이런건 자바랑 비슷함\")]),t._v(\" \"),s(\"li\",[t._v(\"코틀린은 추가로 여러가지 식에서 문자열을 합성해내는 좋은 방법을 제공한다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"fun\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" name \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"readLine\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello, '),s(\"span\",{pre:!0,attrs:{class:\"token interpolation variable\"}},[t._v(\"$name\")]),t._v(\"!\\\\n Today is \"),s(\"span\",{pre:!0,attrs:{class:\"token interpolation\"}},[s(\"span\",{pre:!0,attrs:{class:\"token delimiter variable\"}},[t._v(\"${\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Date\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token delimiter variable\"}},[t._v(\"}\")])]),t._v('\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"기본적으로 ${}의 중괄호 사이에 넣기만 하면 어떤 코틀린 식이든 문자열에 넣을 수 있다\")]),t._v(\" \"),s(\"li\",[t._v(\"이런 걸 문자열 템플릿 이라고 한다\")]),t._v(\" \"),s(\"li\",[t._v(\"실제로 위의 내용을 실행하면\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[t._v(\"Hello John\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!\")]),t._v(\"\\nToday \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"is\")]),t._v(\" Sat Sep \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"04\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"00\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"42\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"29\")]),t._v(\" KST \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2021\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"또다른 문자열 유형으로 로우 문자열(raw string)이 있다\")]),t._v(\" \"),s(\"li\",[t._v(\"이스케이프 시퀀스를 사용 안해도 됨\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" message \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token raw-string string\"}},[t._v('\"\"\"\\n    Hello, '),s(\"span\",{pre:!0,attrs:{class:\"token interpolation variable\"}},[t._v(\"$name\")]),t._v(\"!\\n    Today is \"),s(\"span\",{pre:!0,attrs:{class:\"token interpolation\"}},[s(\"span\",{pre:!0,attrs:{class:\"token delimiter variable\"}},[t._v(\"${\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Date\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token delimiter variable\"}},[t._v(\"}\")])]),t._v('\\n\"\"\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"trimIndent\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-3-2-기본-문자열-연산\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-2-기본-문자열-연산\"}},[t._v(\"#\")]),t._v(\" 2.3.2 기본 문자열 연산\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"모든 String 인스턴스는 문자열에 든 문자 수를 표현하는 length와 문자열의 마지막 인덱스를 표현하는 lastIndex 프로퍼티를 제공한다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello!\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 6\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello!\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lastIndex \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 5\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"자바처럼 괄호안에 넣는 연산자를 사용해 개별 문자에 접근 가능하다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" s \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello!\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// H\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"연산자를 사용해 연결도 가능\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" s \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"The sum is : \"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" sum\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"근데 사실 그냥 문자열 템플릿 쓰면 됨\")]),t._v(\" \"),s(\"li\",[t._v(\"문자열 비교는 == 으로 된다\")]),t._v(\" \"),s(\"li\",[t._v(\"자바와는 다르게 내용이 같으면 같은 문자열로 본다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" s1 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello!\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" s2 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hel\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"lo!\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s1 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" s2\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"추가로 문자열은 isEmpty(), isNotEmpty(), substring, endsWith, indexOf 같은걸 제공한다\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-4-배열\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-4-배열\"}},[t._v(\"#\")]),t._v(\" 2.4 배열\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-4-1-배열-정의하기\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-4-1-배열-정의하기\"}},[t._v(\"#\")]),t._v(\" 2.4.1 배열 정의하기\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"배열 구조를 구현하는 가장 일반적인 코틀린 타입은 Array\"),s(\"T\")],1),t._v(\" \"),s(\"li\",[t._v(\"배열 크기를 알면 아래와 같이 만들 수 있다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" a \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" emptyArray\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"String\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" b \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"arrayOf\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"world\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" c \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"arrayOf\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"전부다 제네릭해서 원소타입을 지정해야 맞지만, 내부 값을 통해 알아서 추론해준다\")]),t._v(\" \"),s(\"li\",[t._v(\"인덱스로부터 원소를 만들어내는 방법을 기술해 배열을 생성하는 더 유연한 방법도 있다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" size \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"readLine\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!!\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toInt\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" squares \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Array\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"size\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"it \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"it \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"중괄호 안에 들어간건 람다\")]),t._v(\" \"),s(\"li\",[t._v(\"값은 1,4,9 등이 들어가게 된다\")])]),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"Array\"),s(\"Int\",[t._v(\"를 사용해도 잘 동작하지만, 모든 수를 박싱하기 때문에 실용적이지 못하다\")])],1),t._v(\" \"),s(\"li\",[t._v(\"효율적인 ByteArray, ShortArray, IntArray 등을 쓰면 된다\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-kotlin extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-kotlin\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"val\")]),t._v(\" squares \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"IntArrayOf\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"it \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"it \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-4-2-배열-사용하기\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-4-2-배열-사용하기\"}},[t._v(\"#\")]),t._v(\" 2.4.2 배열 사용하기\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"size와 lastIndex 프로퍼티가 있다\")]),t._v(\" \"),s(\"li\",[t._v(\"나머진 자바랑 비슷\")]),t._v(\" \"),s(\"li\",[t._v(\"별도 배열을 만들고 싶으면 copyOf를 사용한다\")]),t._v(\" \"),s(\"li\",[t._v(\"isEmpty(), isNotEmpty(), indexOf 등을 지원한다\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-5-결론\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-5-결론\"}},[t._v(\"#\")]),t._v(\" 2.5 결론\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"기본 타입들을 잘 익히자\")])])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}